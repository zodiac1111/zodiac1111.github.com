<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[喜乐]]></title>
  <link href="http://zodiac1111.github.com/atom.xml" rel="self"/>
  <link href="http://zodiac1111.github.com/"/>
  <updated>2013-02-16T12:56:10+08:00</updated>
  <id>http://zodiac1111.github.com/</id>
  <author>
    <name><![CDATA[zodiac1111]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[利用calibre推送RSS源到Kindle]]></title>
    <link href="http://zodiac1111.github.com/blog/2013/02/12/rss2kindle-use-calibre/"/>
    <updated>2013-02-12T10:36:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2013/02/12/rss2kindle-use-calibre</id>
    <content type="html"><![CDATA[<h1>抓取RSS fatch news</h1>

<h2>安装calibre</h2>

<p><a href="http://calibre-ebook.com/">calibre</a>是一款强大的软件,可以下载/转换/编辑/管理kindle上的电子书.</p>

<h2>编辑.recipeRSS源</h2>

<h2>抓取RSS(转换格式)</h2>

<p>都在命令行在操作,方便部署到远程主机.
<a href="http://manual.calibre-ebook.com/cli/ebook-convert.html">文档</a></p>

<pre><code>ebook-convert  &lt;RSS源文件&gt;.recipe   &lt;转换后文件名&gt;.pobi  --test --username &lt;谷歌账号&gt;@gmail.com --password "&lt;谷歌密码&gt;" &gt;&gt; converrt.log
</code></pre>

<h1>编辑修改(可选)</h1>

<h1>推送到Kindle</h1>

<p><a href="http://manual.calibre-ebook.com/cli/calibre-smtp.html">calibre-smtp使用文档</a></p>

<pre><code>calibre-smtp --attachment news.mobi --relay smtp.gmail.com --port 587 --username &lt;谷歌账号&gt;@gmail.com --passwor
</code></pre>

<p>d &#8220;&lt;谷歌密码>&#8221; &#8211;encryption-method TLS &lt;账号>@gmail.com &lt;kindle推送地址>@kindle.com &#8220;&lt;邮件正文>&#8221; -v -s &#8220;&lt;邮件主题>&#8221; >> stmp.log</p>

<h1>定时推送</h1>

<pre><code>crontab -e
0 0 * * * 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kindle Paperwhite越狱]]></title>
    <link href="http://zodiac1111.github.com/blog/2013/02/05/jailbreak-kindle-paperwhite/"/>
    <updated>2013-02-05T14:52:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2013/02/05/jailbreak-kindle-paperwhite</id>
    <content type="html"><![CDATA[<p>kindle是linux系统,arm处理器.关于系统架构可以参考<a href="http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#Architecture">http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#Architecture</a></p>

<p>这次主要目的是将Kindle Paperwhite越狱,在PC(Fedora18 Linux)上.
实现通用的ssh访问.其实PW入手才不到24小时.果然我就是喜欢拆呵 :)</p>

<!-- more -->


<h2>越狱</h2>

<h3>降级(非必须)</h3>

<p>因为不小心升级到5.3.3需要降级才可以使用,如降级到5.3.1</p>

<p>5.3.1文件 <a href="http://kindle.s3.amazonaws.com/update_kindle_5.3.1.bin">http://kindle.s3.amazonaws.com/update_kindle_5.3.1.bin</a></p>

<p>复制到Kindle&#8221;根目录&#8221;.</p>

<p>在Kindle上 设置图标->设置选项->更新.</p>

<h3>越狱</h3>

<p>参考:Kindle Paperwhite Jailbreak (5.2.0 - 5.3.1):</p>

<p><a href="http://www.mobileread.com/forums/showthread.php?t=198446">http://www.mobileread.com/forums/showthread.php?t=198446</a></p>

<p>如果又什么不同的地方,请以参考文档为准.</p>

<p>解压附件,按照<code>README.txt</code>指示.(RTFM!)</p>

<ul>
<li>把Kindle插到PC机上,会有一个磁盘Kindle.把三个文件如下放置到Kindle根目录</li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> .
</span><span class='line'>  |-- documents
</span><span class='line'>  |   <span class="sb">`</span>-- jailbreak.mobi
</span><span class='line'>  |-- jailbreak.sh
</span><span class='line'>  <span class="sb">`</span>-- MOBI8_DEBUG
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>在PC上&#8221;弹出&#8221;磁盘.</p></li>
<li><p>Kindle上有一本书,打开,按照其指示操作.</p></li>
</ul>


<p><img src="http://zodiac1111.github.com/downloads/img/一本书.png" width="300">
<img src="http://zodiac1111.github.com/downloads/img/点击.png" width="300"></p>

<ul>
<li>按住左上角</li>
</ul>


<p><img src="http://zodiac1111.github.com/downloads/img/按住.png" width="300"></p>

<ul>
<li>等待</li>
</ul>


<p><img src="http://zodiac1111.github.com/downloads/img/等待.png" width="300"></p>

<h3>SSH登陆</h3>

<p>USBnet 网络登陆,参考:</p>

<p><a href="http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#USB_Networking">http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#USB_Networking</a></p>

<p>根据<code>README_FIRST</code>文件指引:</p>

<ol>
<li>复制 update_usbnet_0.7.N_install.bin到Kindle根目录</li>
<li>弹出.</li>
<li><p>更新您的Kindle:在Kindle上 设置图标->设置选项->更新.</p></li>
<li><p>诊断模式.</p></li>
<li>PC上启动USBnet.

<pre><code> host ifconfig usb0 192.168.15.201
</code></pre>

可能需要在网络连接中设置网关.

<pre><code> IP 192.168.15.201
 Subnet 255.255.255.0
 网关192.168.15.1
</code></pre></li>
<li>ping下看看:)

<pre><code> [zodiac1111@localhost octopress]$ ping 192.168.15.244
 PING 192.168.15.244 (192.168.15.244) 56(84) bytes of data.
 64 bytes from 192.168.15.244: icmp_seq=1 ttl=64 time=1.23 ms
 64 bytes from 192.168.15.244: icmp_seq=2 ttl=64 time=0.189 ms
</code></pre></li>
<li>登陆</li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> <span class="o">[</span>zodiac1111@localhost octopress<span class="o">]</span><span class="nv">$ </span>ssh root@192.168.15.244
</span><span class='line'>  The authenticity of host <span class="s1">&#39;192.168.15.244 (192.168.15.244)&#39;</span> can<span class="s1">&#39;t be established.</span>
</span><span class='line'><span class="s1"> RSA key fingerprint is 78:80:25:41:49:59:52:9c:30:89:b3:3f:c8:b6:e2:e3.</span>
</span><span class='line'><span class="s1"> Are you sure you want to continue connecting (yes/no)? yes</span>
</span><span class='line'><span class="s1"> Warning: Permanently added &#39;</span>192.168.15.244<span class="s1">&#39; (RSA) to the list of known hosts.</span>
</span><span class='line'><span class="s1"> root@192.168.15.244&#39;</span>s password:
</span><span class='line'>  <span class="c">#################################################</span>
</span><span class='line'>  <span class="c">#  N O T I C E  *  N O T I C E  *  N O T I C E  # </span>
</span><span class='line'>  <span class="c">#################################################</span>
</span><span class='line'>  Rootfs is mounted <span class="nb">read</span>-only. Invoke mntroot rw to
</span><span class='line'>  switch back to a writable rootfs.
</span><span class='line'>  <span class="c">#################################################</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>到处看看</li>
</ol>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@<span class="o">[</span>192_168_15_244<span class="o">]</span> etc<span class="o">]</span><span class="c"># df</span>
</span><span class='line'>Filesystem           1K-blocks      Used Available Use% Mounted on
</span><span class='line'>/dev/root                63703     26170     34333  43% /
</span><span class='line'>tmpfs                   128096         4    128092   0% /dev
</span><span class='line'>tmpfs                   128096         0    128096   0% /dev/shm
</span><span class='line'>/dev/mmcblk0p3           63461     14573     45612  24% /var/local
</span><span class='line'>fsp                    1392632     11824   1380808   1% /mnt/us
</span><span class='line'>/dev/loop/0            1392632     11824   1380808   1% /mnt/base-us
</span><span class='line'><span class="o">[</span>root@<span class="o">[</span>192_168_15_244<span class="o">]</span> /<span class="o">]</span><span class="c"># ls -l</span>
</span><span class='line'>drwxrwxr-x    2 root     root          2048 Sep 26  2012 bin
</span><span class='line'>drwxr-xr-x    2 root     root          1024 Jan  1  1970 cust
</span><span class='line'>drwxr-xr-x   12 root     root          1000 Jan  1 00:01 dev
</span><span class='line'>drwxrwxr-x   16 root     root          1024 Jan  1 00:02 etc
</span><span class='line'>drwxrwxr-x    5 root     root          2048 Sep 26  2012 lib
</span><span class='line'>drwxrwxr-x    8 root     root          1024 Sep 26  2012 mnt
</span><span class='line'>drwxrwxr-x    5 root     root          1024 Jan  1  1970 opt
</span><span class='line'>dr-xr-xr-x   70 root     root             0 Jan  1 00:00 proc
</span><span class='line'>drwxrwxr-x    2 root     root          2048 Sep 26  2012 sbin
</span><span class='line'>drwxr-xr-x   12 root     root             0 Jan  1 00:00 sys
</span><span class='line'>lrwxrwxrwx    1 root     root             8 Jan  1 00:00 tmp -&gt; /var/tmp
</span><span class='line'>drwxrwxr-x    8 root     root          1024 Sep 26  2012 usr
</span><span class='line'>drwxrwxr-x    9 root     root           180 Jan  1 00:01 var
</span><span class='line'><span class="o">[</span>root@kindle etc<span class="o">]</span><span class="c"># uname -a</span>
</span><span class='line'>Linux kindle 2.6.31-rt11-lab126 <span class="c">#1 Thu Nov 29 23:37:38 PST 2012 armv7l GNU/Linux</span>
</span><span class='line'><span class="o">[</span>root@<span class="o">[</span>192_168_15_244<span class="o">]</span> /<span class="o">]</span><span class="c"># ifconfig </span>
</span><span class='line'>lo        Link encap:Local Loopback
</span><span class='line'>          inet addr:127.0.0.1  Mask:255.0.0.0
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:16436  Metric:1
</span><span class='line'>          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:0 <span class="o">(</span>0.0 B<span class="o">)</span>  TX bytes:0 <span class="o">(</span>0.0 B<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>usb0      Link encap:Ethernet  HWaddr EE:59:00:00:00:15
</span><span class='line'>          inet addr:192.168.15.244  Bcast:192.168.15.255  Mask:255.255.255.0
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:1318 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:459 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:85456 <span class="o">(</span>83.4 KiB<span class="o">)</span>  TX bytes:64533 <span class="o">(</span>63.0 KiB<span class="o">)</span>
</span><span class='line'><span class="c">#这个时候只有usb</span>
</span></code></pre></td></tr></table></div></figure>


<h2>通过Wi-Fi登陆</h2>

<p>老是接着usb线太不方便了,无绳论的我当然要追求利用无线咯.参考:<a href="http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#SSH_access_over_Wifi">http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#SSH_access_over_Wifi</a></p>

<ol>
<li>改个密码.方便使用,谁没事记序列号或者在线猜测密码,关键是那密码不一定对:(</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#文件系统本来是只读的,先让它可以读写.   
</span><span class='line'>mntroot rw
</span><span class='line'>#修改root用户密码
</span><span class='line'>passwd</span></code></pre></td></tr></table></div></figure>


<ol>
<li>编辑配置文件</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd mnt/us/usbnet/etc
</span><span class='line'>#有一种信仰叫做vi &gt;_&lt; 
</span><span class='line'>vi config
</span><span class='line'>
</span><span class='line'>#!/bin/sh
</span><span class='line'>#
</span><span class='line'># $Id: config 8742 2012-10-21 20:04:06Z NiLuJe $
</span><span class='line'>#
</span><span class='line'>
</span><span class='line'># WARNING: Take note that we're essentially a shell script, se we absolutely *MUST* use UNIX line endings!
</span><span class='line'># WARNING: To avoid leaving your system in an undefined state,
</span><span class='line'>#          do *NOT* modify this file while usb over ethernet is enabled!
</span><span class='line'>#          (That means when the the auto enable feature is in use, too!)
</span><span class='line'>
</span><span class='line'># Tweak this to your liking (IPv4 only, no hostname aliases)
</span><span class='line'>KINDLE_IP=192.168.15.244
</span><span class='line'>
</span><span class='line'># Allow SSH over WiFi
</span><span class='line'># NOTE: If you set this to true, the SSHD *WILL* check your passwords!
</span><span class='line'># Make sure you know your root password, or auth via shared keys!
</span><span class='line'>USE_WIFI="true"
</span><span class='line'>
</span><span class='line'># Don't switch to Ethernet over USB, and only launch SSHD
</span><span class='line'># NOTE: Make sure you're able to properly login over SSH before enabling this...
</span><span class='line'># It's obviously only useful with WiFi devices, so leave to false on non-WiFi devices
</span><span class='line'>USE_WIFI_SSHD_ONLY="false"
</span><span class='line'>
</span><span class='line'># Use OpenSSH instead of dropbear (somewhat faster login)
</span><span class='line'># NOTE: OpenSSH *WILL* check your passwords!
</span><span class='line'># Make sure you know your root password, or auth via shared keys!
</span><span class='line'>USE_OPENSSH="false"
</span><span class='line'>- config 1/27 3%</span></code></pre></td></tr></table></div></figure>


<p>忘了要不要重启.</p>

<p>我是没有设置开机启动USBnet.而是通过<code>;un</code>来手动启动.一些指令:<a href="http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#Search_Bar_Shortcuts">http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#Search_Bar_Shortcuts</a></p>

<p>再登陆,这时就不需要USB电缆了.连上Wi-Fi.Kindle的IP是192.168.0.101(我家的路由D-link的),IP就根据实际情况好了.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'> ssh root@192.168.0.101
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@kindle etc<span class="o">]</span><span class="c"># ifconfig </span>
</span><span class='line'>lo        Link encap:Local Loopback
</span><span class='line'>          inet addr:127.0.0.1  Mask:255.0.0.0
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:16436  Metric:1
</span><span class='line'>          RX packets:476 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:476 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:112343 <span class="o">(</span>109.7 KiB<span class="o">)</span>  TX bytes:112343 <span class="o">(</span>109.7 KiB<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>usb0      Link encap:Ethernet  HWaddr EE:19:00:00:00:00
</span><span class='line'>          inet addr:192.168.15.244  Bcast:192.168.15.255  Mask:255.255.255.0
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:2878 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:1291 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:151737 <span class="o">(</span>148.1 KiB<span class="o">)</span>  TX bytes:227383 <span class="o">(</span>222.0 KiB<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>wlan0     Link encap:Ethernet  HWaddr F0:4F:7C:F8:0A:75
</span><span class='line'>          inet addr:192.168.0.101  Bcast:192.168.0.255  Mask:255.255.255.0
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:2021 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:1434 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:535079 <span class="o">(</span>522.5 KiB<span class="o">)</span>  TX bytes:280214 <span class="o">(</span>273.6 KiB<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>取消诊断模式时出现错误?参考:<a href="http://www.mobileread.com/forums/showthread.php?p=2041719">http://www.mobileread.com/forums/showthread.php?p=2041719</a></p>

<p>启动USBnet ;un</p>

<h2>定制字体</h2>

<p>参考1:<a href="http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#Custom_Fonts">http://wiki.mobileread.com/wiki/Kindle_Touch_Hacking#Custom_Fonts</a></p>

<p>参考2:<a href="http://www.mobileread.com/forums/showthread.php?t=168765">http://www.mobileread.com/forums/showthread.php?t=168765</a> 5.3.1版本</p>

<p>各种字体,文泉驿等宽正黑效果图:</p>

<p><img src="http://zodiac1111.github.com/downloads/img/各种字体.png" width="300">
<img src="http://zodiac1111.github.com/downloads/img/文泉驿等宽正黑.png" width="300"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[升级到fedora18]]></title>
    <link href="http://zodiac1111.github.com/blog/2013/01/17/update-to-fedora-18/"/>
    <updated>2013-01-17T18:55:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2013/01/17/update-to-fedora-18</id>
    <content type="html"><![CDATA[<p>从fedora17升级到fedora18</p>

<h1>参考</h1>

<ul>
<li>官网:<a href="https://fedoraproject.org/wiki/Upgrading_Fedora_using_yum">https://fedoraproject.org/wiki/Upgrading_Fedora_using_yum</a></li>
</ul>


<h1>大致步骤</h1>

<ol>
<li><b>备份(数据无价)</b></li>
<li>阅读已知bug和发行说明,确保自己升级到的版本对自己无害,且有升级的必要</li>
<li>清理目前的系统</li>
<li>升级</li>
<li>安装grub引导程序

<h2>升级</h2>

<p>到文本界面(我没有切换到文本界面,直接在gnome3下升级的,阿门)</p>

<p>  ctrl + alt + F2</p></li>
</ol>


<p>升级yum</p>

<pre><code>yum update yum
</code></pre>

<p>清除cache</p>

<pre><code>yum clean all
</code></pre>

<p>升级所有包(先删除一些自己不用的包可以加快这一步)</p>

<pre><code>yum --releasever=18 distro-sync
</code></pre>

<p>验证升级</p>

<pre><code>yum repolist 
</code></pre>

<p>安装所有的包都是新的版本</p>

<pre><code>yum groupupdate 'Minimal Install'
</code></pre>

<p>安装/列举一些自己必要的组</p>

<pre><code>yum grouplist
</code></pre>

<h2>安装grub</h2>

<pre><code>/sbin/grub2-install &lt;引导设备&gt;
</code></pre>

<p>如,我是将fedora17安装在本机唯一一块硬盘上,使用了这样硬盘的所有空间.磁盘仅2搞分区,boot分区和lvm逻辑卷分区.
我的grub是安装在boot分区上的.我使用如下命令:</p>

<pre><code>/sbin/grub2-install --recheck /dev/sda
</code></pre>

<h1>其他</h1>

<ul>
<li>从 alpha, beta, preview, 或其他 Rawhide 版本升级的,参见:<a href="https://fedoraproject.org/wiki/Upgrading_from_pre-release_to_final">https://fedoraproject.org/wiki/Upgrading_from_pre-release_to_final</a></li>
<li>升级到开发者版本:<code>yum --releasever=rawhide distro-sync --nogpgcheck</code>.</li>
<li>升级过程中不要中途停止,那样你的系统可能会处于版本混合状态(17和18混合).那样可能会十分麻烦甚至是不可解的.</li>
</ul>


<h1>其他小问题</h1>

<h3>Chrome浏览器</h3>

<p>升级到fedora18后,启动Chrome/Chromium发生以下错误:</p>

<pre><code>chrome-linux/chrome: error while loading shared libraries: libudev.so.0: cannot open shared object file: No such file or directory
</code></pre>

<p>到/lib目录下,运行<code>ls -l|grep libudev</code>会发现:</p>

<pre><code>lrwxrwxrwx   1 root root       16 1月  16 22:55 libudev.so.1 -&gt; libudev.so.1.1.6
-rwxr-xr-x   1 root root    70708 1月   4 06:52 libudev.so.1.1.6
</code></pre>

<p>所以只要给<code>libudev.so.0</code>做个软连接到<code>libudev.so.1.1.6</code>即可:</p>

<pre><code>ln -s libudev.so.1.1.6 libudev.so.0
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[atmega8使用1602字符液晶(hd44780)]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/12/16/atmega8-hd44780-lcd1602/"/>
    <updated>2012-12-16T17:18:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/12/16/atmega8-hd44780-lcd1602</id>
    <content type="html"><![CDATA[<h1>一般操作</h1>

<p>HD44780LCD控制器的维基百科<a href="#ref1">[1]</a>,我现在所用的应该也是基于HD44780LCD控制器 <a href="#ref2">[2]</a> 的.</p>

<h1>References</h1>

<ol>
<li><a id="ref1"></a>维基百科:HD44780LCD控制器 <a href="https://en.wikipedia.org/wiki/Hitachi_HD44780_LCD_controller">https://en.wikipedia.org/wiki/Hitachi_HD44780_LCD_controller</a></li>
<li><a id="ref2"></a>How to control a HD44780-based Character-LCD: <a href="http://www.ekenrooi.net/lcd/lcd.shtml">http://www.ekenrooi.net/lcd/lcd.shtml</a></li>
<li><a id="ref3"></a>LCD Technical FAQ INDEX V (September_1996a)<a href="http://www.repairfaq.org/filipg/LINK/F_Tech_LCD.html">http://www.repairfaq.org/filipg/LINK/F_Tech_LCD.html</a></li>
<li><a id="ref4"></a>Build your own &#8220;2-Wire LCD Interface&#8221; using the PIC16C84 microcontroller<a href="http://www.rentron.com/Myke1.htm">http://www.rentron.com/Myke1.htm</a></li>
<li><a id="ref5"></a>HD44780 LCD User-Defined Graphics(自定义字符): <a href="http://www.quinapalus.com/hd44780udg.html">http://www.quinapalus.com/hd44780udg.html</a></li>
<li><a id="ref6"></a>自定义字符: <a href="http://www.repairfaq.org/filipg/LINK/F_LCD_HD44780.html#LCDHD_009">http://www.repairfaq.org/filipg/LINK/F_LCD_HD44780.html#LCDHD_009</a></li>
<li><a id="ref7"></a>Hitachi HD44780U (LCD-II) datasheet: <a href="http://lcd-linux.sourceforge.net/pdfdocs/hd44780.pdf">http://lcd-linux.sourceforge.net/pdfdocs/hd44780.pdf</a></li>
<li><a id="ref8"></a>Hitachi HD44780U (LCD-II) datasheet: <a href="http://www.sparkfun.com/datasheets/LCD/HD44780.pdf">http://www.sparkfun.com/datasheets/LCD/HD44780.pdf</a>
http://homepage.hispeed.ch/peterfleury/avr-lcd44780.html
http://homepage.hispeed.ch/peterfleury/avr-software.html#libs</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修正doxygen中文显示html不换行bug]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/12/07/doxygen-chinese-html-wrapline-bug/"/>
    <updated>2012-12-07T19:31:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/12/07/doxygen-chinese-html-wrapline-bug</id>
    <content type="html"><![CDATA[<h1>描述</h1>

<p>doxygen在 <code>OUTPUT_LANGUAGE</code> 选项设置成为 Chinese 后,<br/>
生成的html页面中关于函数的<strong>参考</strong>项目.<br/>
列出很多项的时候会超出框架,一直在一行上,没有按照框架的宽度换行.</p>

<p>效果如图:<img src="http://zodiac1111.github.com/downloads/img/bug.png"></p>

<p>如图长长的一行文字十分不方便查看.</p>

<p>该问题在1.8.1.1和1.8.2(目前版本)都存在,且只有以简体中文作为输出语言是存在.</p>

<h1>解决</h1>

<p>修改doxygen源代码.</p>

<ul>
<li><p>下载源代码包:<a href="http://sourceforge.net/projects/doxygen/files/rel-1.8.2/">http://sourceforge.net/projects/doxygen/files/rel-1.8.2/</a>    doxygen-1.8.2.src.tar.gz</p></li>
<li><p>修改 <code>/doxygen-1.8.2/src/translator_cn.h</code> 文件 <br/>
第546行<code>virtual QCString trWriteList(int numEntries)</code> 函数中的:</p></li>
</ul>


<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="o">!=</span><span class="n">numEntries</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>  <span class="c1">// not the last entry, so we need a separator</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="o">&lt;</span><span class="n">numEntries</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="c1">// not the fore last entry </span>
</span><span class='line'>            <span class="n">result</span><span class="o">+=</span><span class="s">&quot;,&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="k">else</span>                <span class="c1">// the fore last entry</span>
</span><span class='line'>            <span class="n">result</span><span class="o">+=</span><span class="n">CN_SPC</span><span class="s">&quot;, 以及&quot;</span><span class="n">CN_SPC</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>修改为:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="o">!=</span><span class="n">numEntries</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>  <span class="c1">// not the last entry, so we need a separator</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="o">&lt;</span><span class="n">numEntries</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span> <span class="c1">// not the fore last entry </span>
</span><span class='line'>            <span class="n">result</span><span class="o">+=</span><span class="s">&quot;,&quot;</span><span class="n">CN_SPC</span><span class="p">;</span>
</span><span class='line'>          <span class="k">else</span>                <span class="c1">// the fore last entry</span>
</span><span class='line'>            <span class="n">result</span><span class="o">+=</span><span class="n">CN_SPC</span><span class="s">&quot;, 以及&quot;</span><span class="n">CN_SPC</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>即在<code>","</code>后面加上<code>CN_SPC</code>(其实就是一个空格)</p>

<p>编译,安装之后即可.</p>

<p>完成效果:<img src="http://zodiac1111.github.com/downloads/img/now-ok.png">
这样所有的参考就都很在页面中看到了 :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译avr-insight]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/11/24/debug-avr-with-insight-avr-gdb-gui/"/>
    <updated>2012-11-24T18:16:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/11/24/debug-avr-with-insight-avr-gdb-gui</id>
    <content type="html"><![CDATA[<p><a href="http://zodiac1111.github.com/blog/2012/11/19/avr-jtag-debug-with-eclipse-on-linux/">上次</a>进行到可以调试avr程序,但是不能以汇编语言单步执行/调试程序.而且eclipse的调试界面也不是很喜欢,还是用insight比较习惯.但是insight不能直接调用avr-gdb,这点ddd就比较方便,可以指定各种命令行的调试器.所以还是决定编译avr-insight来调试程序.</p>

<h1>完成效果:</h1>

<p>调试环境:
<img src="http://zodiac1111.github.com/downloads/img/调试环境.png"></p>

<p>基本的代码,汇编代码,寄存器,堆栈等功能都可以使用了. :)</p>

<!-- more -->


<p>远程调试设置:
<img src="http://zodiac1111.github.com/downloads/img/远程调试设置.png"></p>

<h1>编译avr-insight</h1>

<p>构建avr-gcc: <a href="http://wiki.vandenbussche.nl/index.php?title=Building_AVR_GCC">http://wiki.vandenbussche.nl/index.php?title=Building_AVR_GCC</a></p>

<p>insight下载的地址: <a href="http://mirrors.kernel.org/sources.redhat.com/insight/releases/">http://mirrors.kernel.org/sources.redhat.com/insight/releases/</a><br/>
下载<code>insight-6.8-1a.tar.bz2</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./configure --target=avr --program-prefix="avr-"
</span><span class='line'>$ make
</span><span class='line'>as root
</span><span class='line'># make install</span></code></pre></td></tr></table></div></figure>


<h2>出现的问题</h2>

<h3>警告升级为错误1</h3>

<p>在<code>make</code>阶段发生如下错误:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I.././bfd -I. -I. -I.././bfd -I.././bfd/../include -W -Wall -Wstrict-prototypes -Wmissing-prototypes -Werror -g -O2 -c elf32-avr.c -o elf32-avr.o
</span><span class='line'>elf32-avr.c: In function 'elf32_avr_relocate_section':
</span><span class='line'>elf32-avr.c:1204:34: error: variable 'warned' set but not used [-Werror=unused-but-set-variable]
</span><span class='line'>elf32-avr.c:1204:16: error: variable 'unresolved_reloc' set but not used [-Werror=unused-but-set-variable]
</span><span class='line'>elf32-avr.c:1183:11: error: variable 'r_type' set but not used [-Werror=unused-but-set-variable]
</span><span class='line'>elf32-avr.c: In function 'elf32_avr_relax_delete_bytes':
</span><span class='line'>elf32-avr.c:1414:15: error: variable 'shrinked_insn_address' set but not used [-Werror=unused-but-set-variable]
</span><span class='line'>elf32-avr.c:1382:22: error: variable 'irelalign' set but not used [-Werror=unused-but-set-variable]
</span><span class='line'>elf32-avr.c: In function 'elf32_avr_relax_section':
</span><span class='line'>elf32-avr.c:1596:29: error: variable 'last_reloc' set but not used [-Werror=unused-but-set-variable]
</span><span class='line'>elf32-avr.c: In function 'avr_mark_stub_not_to_be_necessary':
</span><span class='line'>elf32-avr.c:2459:37: error: variable 'htab' set but not used [-Werror=unused-but-set-variable]
</span><span class='line'>cc1: all warnings being treated as errors
</span><span class='line'>make[4]: *** [elf32-avr.lo] 错误 1
</span><span class='line'>make[4]: 离开目录“/home/zodiac1111/test/insight-6.8-1/bfd”
</span><span class='line'>make[3]: *** [all-recursive] 错误 1
</span><span class='line'>make[3]: 离开目录“/home/zodiac1111/test/insight-6.8-1/bfd”
</span><span class='line'>make[2]: *** [all] 错误 2
</span><span class='line'>make[2]: 离开目录“/home/zodiac1111/test/insight-6.8-1/bfd”
</span><span class='line'>make[1]: *** [all-bfd] 错误 2
</span><span class='line'>make[1]: 离开目录“/home/zodiac1111/test/insight-6.8-1”
</span><span class='line'>make: *** [all] 错误 2</span></code></pre></td></tr></table></div></figure>


<p>将文件insight-6.8-1/bfd/Makefile,修改为:</p>

<p><code>201: WARN_CFLAGS = -W -Wall -Wstrict-prototypes -Wmissing-prototypes #-Werror</code></p>

<p>注销掉<code>-Werror</code></p>

<h3>警告升级为错误2</h3>

<p>在<code>make</code>阶段发生如下错误:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gcc -c -g -O2   -I. -I.././gdb -I.././gdb/config -DLOCALEDIR="\"/usr/local/share/locale\"" -DHAVE_CONFIG_H -I.././gdb/../include/opcode -I.././gdb/../readline/.. -I../bfd -I.././gdb/../bfd -I.././gdb/../include -I../libdecnumber -I.././gdb/../libdecnumber   -DMI_OUT=1 -DGDBTK -DTUI=1  -Wall -Wdeclaration-after-statement -Wpointer-arith -Wformat-nonliteral -Wno-pointer-sign -Wno-unused -Wno-switch -Wno-char-subscripts -Werror cp-name-parser.c
</span><span class='line'>cp-name-parser.y: 在函数‘cp_comp_to_string’中:
</span><span class='line'>cp-name-parser.y:1980:20: 错误：在‘enum demangle_component_type’和‘enum &lt;匿名>’间比较 [-Werror=enum-compare]
</span><span class='line'>cp-name-parser.y:1985:25: 错误：在‘enum demangle_component_type’和‘enum &lt;匿名>’间比较 [-Werror=enum-compare]
</span><span class='line'>cc1: all warnings being treated as errors
</span><span class='line'>make[2]: *** [cp-name-parser.o] 错误 1
</span><span class='line'>make[2]: 离开目录“/home/zodiac1111/test/insight-6.8-1/gdb”
</span><span class='line'>make[1]: *** [all-gdb] 错误 2
</span><span class='line'>make[1]: 离开目录“/home/zodiac1111/test/insight-6.8-1”
</span><span class='line'>make: *** [all] 错误 2</span></code></pre></td></tr></table></div></figure>


<p>文件insight-6.8-1/gdb/Makefile修改为:</p>

<p><code>145:WERROR_CFLAGS = #-Werror</code></p>

<p>注销掉<code>-Werror</code></p>

<h2>使用 insight-6.8a.tar.bz2  可能的问题</h2>

<p>开始的时候没注意,下载了6.8a版本,后来编译完运行时发现了这个问题.<br/>
来源: <a href="http://forums.fedoraforum.org/showthread.php?p=1349223#post1349223">http://forums.fedoraforum.org/showthread.php?p=1349223#post1349223</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Tk_Init failed: Can't find a usable tk.tcl in the following directories: 
</span><span class='line'>/usr/local/share/tk8.4 /usr/local/lib/tk8.4 /usr/lib/tk8.4 /usr/local/library /usr/library /usr/tk8.4.1/library /tk8.4.1/library
</span><span class='line'>
</span><span class='line'>/usr/local/share/tk8.4/tk.tcl: no event type or button # or keysym
</span><span class='line'>no event type or button # or keysym
</span><span class='line'>while executing
</span><span class='line'>"bind Listbox &lt;MouseWheel> {
</span><span class='line'>%W yview scroll [expr {- (%D / 120) * 4}] units
</span><span class='line'>}"
</span><span class='line'>(file "/usr/local/share/tk8.4/listbox.tcl" line 182)
</span><span class='line'>invoked from within
</span><span class='line'>"source /usr/local/share/tk8.4/listbox.tcl"
</span><span class='line'>(in namespace eval "::" script line 1)
</span><span class='line'>invoked from within
</span><span class='line'>"namespace eval ::[list source [file join $::tk_library $file.tcl]]"
</span><span class='line'>(procedure "SourceLibFile" line 2)
</span><span class='line'>invoked from within
</span><span class='line'>"SourceLibFile listbox"
</span><span class='line'>(in namespace eval "::tk" script line 4)
</span><span class='line'>invoked from within
</span><span class='line'>"namespace eval ::tk {
</span><span class='line'>SourceLibFile button
</span><span class='line'>SourceLibFile entry
</span><span class='line'>SourceLibFile listbox
</span><span class='line'>SourceLibFile menu
</span><span class='line'>SourceLibFile panedwindow
</span><span class='line'>SourceLibFile ..."
</span><span class='line'>invoked from within
</span><span class='line'>"if {$::tk_library ne ""} {
</span><span class='line'>if {[string equal $tcl_platform(platform) "macintosh"]} {
</span><span class='line'>proc ::tk::SourceLibFile {file} {
</span><span class='line'>if {[catch {
</span><span class='line'>namesp..."
</span><span class='line'>(file "/usr/local/share/tk8.4/tk.tcl" line 393)
</span><span class='line'>invoked from within
</span><span class='line'>"source /usr/local/share/tk8.4/tk.tcl"
</span><span class='line'>("uplevel" body line 1)
</span><span class='line'>invoked from within
</span><span class='line'>"uplevel #0[list source $file]"
</span><span class='line'>This probably means that tk wasn't installed properly.</span></code></pre></td></tr></table></div></figure>


<p>按照来源里说的,6.8-1已经修复了这个bug.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[配置gcc编译警告选项]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/11/22/config-gcc-warning/"/>
    <updated>2012-11-22T19:17:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/11/22/config-gcc-warning</id>
    <content type="html"><![CDATA[<h1>在各个层次关闭或开启编译警告选项</h1>

<p>从上到下覆盖</p>

<p> 推荐的警告选项:<code>-Wall -Wextra</code></p>

<h2>1. 符号级:指定某个变量警告</h2>

<p>主要使用<code>__attribute__</code>这个扩展,指定某个函数/变量等的属性(参考1,2,3).当然<code>__attribute__</code>还能指定其他很多中属性,例如结构体变量的对齐方式,指定声明的函数的属性等,但这里仅关注在警告方面的变量的属性.</p>

<pre><code>int a __attribute__ ((unused));
</code></pre>

<p>指定该变量为&#8221;未使用的&#8221;.即使这个变量没有被使用,编译时也会忽略则个警告输出.</p>

<h2>2. 源代码级:在文件中诊断</h2>

<p>能在编译期间规定一段代码的警告属性,如某个文件中后半部分不要求输出某些类型的警告使用编译指示(<a href="http://gcc.gnu.org/onlinedocs/gcc/Pragmas.html#Pragmas">6.57 Pragmas</a>)中的诊断编译指示(<a href="http://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Pragmas.html#Diagnostic-Pragmas">6.57.10 Diagnostic Pragmas</a>)</p>

<!-- more -->


<p>语法:</p>

<pre><code>#pragma GCC diagnostic &lt;类型&gt; &lt;选项&gt;
</code></pre>

<p>其中类型包括:</p>

<ul>
<li><code>error</code> :诊断为错误.</li>
<li><code>warning</code>:争端为警告.</li>
<li><code>ignored</code>:忽略警告.</li>
</ul>


<p>选项则是命令行选项中的类似<code>-Wformat</code>的选项.</p>

<p>例如:</p>

<p>诊断-忽略:(关闭警告)</p>

<pre><code>#pragma  GCC diagnostic ignored  "-Wformat"
</code></pre>

<p>诊断-警告:(开启警告)</p>

<pre><code>#pragma  GCC diagnostic warning  "-Wformat"
</code></pre>

<p>诊断-错误:(开启警告-升级为错误)</p>

<pre><code>#pragma  GCC diagnostic error  "-Wformat"
</code></pre>

<p>用法:<br/>
在文件开头处关闭警告,在文件结尾出再开启警告,这样可以忽略该文件中的指定警告.</p>

<h2>3 文件或工程级:命令行编译参数指定</h2>

<p>警告:</p>

<pre><code>gcc main.c -Wall
</code></pre>

<p>忽略:</p>

<pre><code>gcc mian.c -Wall -Wno-unused-parameter  #开启all警告,但是忽略 -unused-parameter警告
</code></pre>

<p>选项格式: <code>-W[no-]&lt;警告选项&gt;</code><br/>
如 : <code>-Wno-unused-parameter    #no- 表示诊断时忽略这个警告</code></p>

<h1>参考:</h1>

<ol>
<li>通过<code>__attribute__</code>指定变量的属性(如<code>unused</code>,<code>packed</code>):<br/>
<a href="http://gcc.gnu.org/onlinedocs/gcc/Variable-Attributes.html#i386%20Variable%20Attributes">http://gcc.gnu.org/onlinedocs/gcc/Variable-Attributes.html#i386%20Variable%20Attributes</a></li>
<li>通过<code>__attribute__</code>指定函数的属性(如<code>always_inline</code>):<br/>
<a href="http://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes">http://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes</a></li>
<li><code>__attribute__</code>的语法:<br/>
<a href="http://gcc.gnu.org/onlinedocs/gcc/Attribute-Syntax.html#Attribute-Syntax">http://gcc.gnu.org/onlinedocs/gcc/Attribute-Syntax.html#Attribute-Syntax</a></li>
<li>编译指示(#pragam):<br/>
<a href="http://gcc.gnu.org/onlinedocs/gcc/Pragmas.html#Pragmas">http://gcc.gnu.org/onlinedocs/gcc/Pragmas.html#Pragmas</a></li>
<li>编译诊断指示(Diagnostic Pragmas):<br/>
<a href="http://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Pragmas.html#Diagnostic-Pragmas">http://gcc.gnu.org/onlinedocs/gcc/Diagnostic-Pragmas.html#Diagnostic-Pragmas</a></li>
<li>编译警告选项:<br/>
<a href="http://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html">http://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Linux系统下通过JTAG调试atmega128a]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/11/19/avr-jtag-debug-with-eclipse-on-linux/"/>
    <updated>2012-11-19T20:00:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/11/19/avr-jtag-debug-with-eclipse-on-linux</id>
    <content type="html"><![CDATA[<p><a href="http://zodiac1111.github.com/blog/2012/11/17/avr-mega128a-linux-env-set/">前篇</a>搭建了平台,基本完成了下载的功能,于是乎乘热打铁开始折腾jtag的在线调试.</p>

<h1>前言</h1>

<p>首先说说我对编译开发调试环境的大概认识,如下图:</p>

<p><img src="http://zodiac1111.github.com/downloads/img/结构示意图.png"></p>

<p>PC(编译下载)大约就是<a href="http://zodiac1111.github.com/blog/2012/11/17/avr-mega128a-linux-env-set/">前篇</a>所涉及的部分.</p>

<p>而PC(调试服务器)和PC(调试)就是本文涉及的内容.</p>

<p>稍微解释下我的理解:</p>

<ol>
<li>调试器:使用JTAG调试器,淘宝上几十块钱买的.看样子是兼容AVR JTAG ICE(mk1)的山寨版,能用.</li>
<li>avarice:这里avr-gdb远程调试通过TCP服务,显然板子是不能提供这个服务的,那么avarice大致功能就是将串口(USB)(连着JTAG)转化成为TCP协议,这样通过这个TCP协议可以远程调试</li>
<li>avr-gdb:调试器,可以是使用target remote 指定远程调试</li>
</ol>


<!-- more -->


<h1>效果</h1>

<p>如图:</p>

<p><img src="http://zodiac1111.github.com/downloads/img/avr-debug.png"></p>

<h1>配置</h1>

<h2>调试器(eclipse)</h2>

<p>主要参考 参考[1]和参考[2],对于Linux和win几乎没什么区别.</p>

<p>对于调试配置,找着参考[1]的设置:</p>

<p><img src="http://zodiac1111.github.com/downloads/img/调试配置1.png"></p>

<ol>
<li>确保使用GDB Hardware Debugging,也有说(参考[2])C/C++ Application也行,反正我没弄成</li>
<li>执行 调试器命令.就是在命令行中输入 avr-gdb能启动调试器就可以.</li>
<li>调试目标 等同于命令行中进入avr-gdb后 敲的 <code>target remote localhost:4242</code></li>
<li>确保是 “Standard GDB Hardware Debugging 启动程序”</li>
</ol>


<p>以上是调试器的设置.光设置完调试器并不能调试,还要配置好调试服务器,这样调试器才能连接上调试服务器进行调试.这时就需要上面说的 avarice 了.</p>

<h2>调试服务器</h2>

<p>avarice在终端运行,并且只有他运行着才能在eclipse上正确进行调试;</p>

<p>指令:</p>

<pre><code>avarice -P atmega128 -j /dev/ttyUSB0 :4242
</code></pre>

<p>参数意义是</p>

<ol>
<li>-P &lt;型号> :指定型号 ,atmega128a使用 atmega128</li>
<li>-j &lt;JTAG端口> : 指定使用JTAG的端口,我使用的是 /dev/ttyUSB0 <strong>注意设备文件的权限</strong></li>
<li>:4242 指定开放本机TCP4242端口,之后其他程序(调试器)就可以连接到这个端口进行调试了.<strong>注意和前面参数空格空开</strong></li>
</ol>


<p>然后看到类似下面的提示:</p>

<pre><code>AVaRICE version 2.12, Jan 12 2012 23:36:05

Defaulting JTAG bitrate to 250 kHz.

JTAG config starting.
Hardware Version: 0xc3
Software Version: 0x80
Reported JTAG device ID: 0x9702
Configured for device ID: 0x9702 atmega128 -- Matched with atmega128
JTAG config complete.
Preparing the target device for On Chip Debugging.
Waiting for connection on port 4242.
</code></pre>

<p>JTAG已经能正确识别,单片机型号也读出来了,这时光标闪烁提示等待别的程序连接到4242端口.</p>

<p>这时如果使用avr-gdb命令行指定<code>target remote localhost:4242</code>或者IDE中运行调试,则可以看到如下如是有程序从本机(127.0.0.1)的56443端口连接上来了.</p>

<pre><code>....
Preparing the target device for On Chip Debugging.
Waiting for connection on port 4242.
Connection opened by host 127.0.0.1, port 56443.
</code></pre>

<p>这时就可以调试了.</p>

<h2>其他</h2>

<p>小技巧:在eclipse调试配置的Startup启动选项卡中Runtime Options选择在&#8221;mian函数设置断点&#8221;和&#8221;Resume&#8221;则可以开始调试时直接让程序停在主函数,不然可能需要按&#8221;继续&#8221;开继续运行,或者开始执行初始化代码.
<img src="http://zodiac1111.github.com/downloads/img/调试配置main.png"></p>

<h1>遗留问题</h1>

<ol>
<li>反汇编还不能正确运行,无法一步一步执行(查看)汇编代码</li>
</ol>


<h1>参考:</h1>

<ol>
<li>使用eclipse调试avr(EN) <a href="http://tobias.schroepf.de/doku/doku.php?id=garage:atmel_avr_debugging_with_eclipse">http://tobias.schroepf.de/doku/doku.php?id=garage:atmel_avr_debugging_with_eclipse</a></li>
<li>avr-eclipse 调试wiki(EN) <a href="http://avr-eclipse.sourceforge.net/wiki/index.php/Debugging">http://avr-eclipse.sourceforge.net/wiki/index.php/Debugging</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux下avr单片机开发环境]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/11/17/avr-mega128a-linux-env-set/"/>
    <updated>2012-11-17T12:47:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/11/17/avr-mega128a-linux-env-set</id>
    <content type="html"><![CDATA[<p>目前实现:</p>

<p>可以用过USBasp下载器<strong>下载</strong>到ATmega128a单片机中运行(厂商例程),
还未实现在线调试.</p>

<p>引用来源:见参考一节.</p>

<h1>前提:环境</h1>

<h2>软件:</h2>

<h3>开发平台Linux(kernel 3.6):</h3>

<p>终端使用<code>uname -a</code>命令查看:</p>

<pre><code>Linux localhost.localdomain 3.6.3-1.fc17.i686.PAE #1 SMP Mon Oct 22 15:48:37 UTC 2012 i686 i686 i386 GNU/Linux
</code></pre>

<h3>Linux 发行版(Fedora)</h3>

<p>终端使用<code>lsb_release -a</code>命令查看:</p>

<pre><code>LSB Version:    :core-4.1-ia32:core-4.1-noarch:cxx-4.1-ia32:cxx-4.1-noarch:desktop-4.1-ia32:desktop-4.1-noarch:languages-4.1-ia32:languages-4.1-noarch:printing-4.1-ia32:printing-4.1-noarch
Distributor ID: Fedora
Description:    Fedora release 17 (Beefy Miracle)
Release:    17
Codename:   BeefyMiracle
</code></pre>

<h3>IDE 平台:</h3>

<pre><code>Eclipse Platform
Version: 4.2.1
Build id: M20120914-1800
</code></pre>

<h3>Eclipse 软件(插件)avr-eclipse:</h3>

<pre><code>http://avr-eclipse.sourceforge.net
</code></pre>

<!-- more -->


<h4>下载软件:</h4>

<h5>Linux平台交叉编译avr程序交叉编译器:avr-gcc.</h5>

<p>yum安装或者源代码编译</p>

<h5>avr程序下载(烧写)软件:avrdude</h5>

<p>网址<a href="http://savannah.nongnu.org/projects/avrdude/">http://savannah.nongnu.org/projects/avrdude/</a></p>

<h2>硬件:</h2>

<h3>下载器:</h3>

<h4>USBasp,很早以前淘宝上买的[参考4]:</h4>

<p>lsusb查看如下:</p>

<pre><code>Bus 003 Device 006: ID 16c0:05dc VOTI shared ID for use with libusb
</code></pre>

<p>这个好像只能下载(ISP).</p>

<h4>AVR-JTAG-USB仿真器,也是很久以前买的[参考8]:</h4>

<p>lsusb识别是usb转串,应该就是这样吧 = = .</p>

<pre><code>Bus 003 Device 012: ID 067b:2303 Prolific Technology, Inc. PL2303 Serial Port
</code></pre>

<p>除了下载功能以外,这个还能在线调试.</p>

<p><strong>以上两者任意一个都可以下载程序.</strong></p>

<h3>开发板:</h3>

<p>一年多前淘宝买的开发板(ATmega128a)[参考5],原理图[参考6],扔那里也没怎么玩,最近来了兴致拿起来折腾折腾 :P .</p>

<h1>正文:搭建开发环境:在Linux在使用AVR-Eclipse中，AVR-GCC和AVRDUDE进行Atmel的AVR单片机开发.</h1>

<p>[参考1]</p>

<h2>安装AVR-Eclipse</h2>

<p>在Eclipse中单击帮助(Help)->安装新软件(Install New Sofrware),之后将打开一个对话框.在对话框的顶部 Work with 文本框中粘贴 AVR-Eclipse 更新服务器的地址 (<a href="http://avr-eclipse.sourceforge.net/updatesite/">http://avr-eclipse.sourceforge.net/updatesite/</a>).如图:
[图:安装插件]
<img src="http://zodiac1111.github.com/downloads/img/avr-eclipse-plug-in.png"></p>

<p>安装好之后,点击窗口(Window)->首选项(Preferences)展开左边的AVR一栏.
[图:配置窗口]
<img src="http://zodiac1111.github.com/downloads/img/avr-eclipse-config.png"></p>

<p>侧边栏 编程器配置(Programmer COnfigurations)中点击添加(Add).
左侧选择&#8221;USBasp,http://www.fishchl.de/usbasp&#8221;(<strong>注意</strong>:需要根据实际下载器硬件选择).</p>

<p>[图:下载器/编程器配置]
<img src="http://zodiac1111.github.com/downloads/img/avr-eclipse-config-hw.png"></p>

<p>同时,在项目-属性中也可以设置.
[图:项目属性中的设置(目标硬件设置等)]
<img src="http://zodiac1111.github.com/downloads/img/avr-eclipse-proj-hwset.png"></p>

<h2>使用</h2>

<p>文件(File)->新建(New)->C语言项目(C Project).项目类型(Project type)中选择AVR Cross Target Project -> Empty Project. 给项目名字.</p>

<p>下一步,点击高级设置(Advanced settings),选择之前配置文件. 就可以开始在Linux下进行单片机开发了.</p>

<p>编译完成后,点击avr菜单->上载项目到目标设备即可
[图:上载到设备(开发板)]
<img src="http://zodiac1111.github.com/downloads/img/avr-eclipse-download.png"></p>

<p>环境详情参阅[参考1]</p>

<h3>可能遇到的问题:</h3>

<h4>下载器(硬件)</h4>

<p>选择好适当的下载器.USBasp在Eclipse中工程项目的属性选项中,左侧Programmer Hardwavr编程器硬件应该选择&#8221;USBasp&#8221;.默认端口如果不是默认的<code>/dev/ttyUSB0</code>,必须填写正确的端口以覆盖配置.</p>

<p>使用AVR JTAG USB仿真器时选择&#8221;Atmel JTAG ICE(mk1)&#8221;.因为默认端口(/dev/parport0)不是usb,可能会提示如下错误:</p>

<pre><code>avrdude: ser_open(): can't open device "/dev/parport0": No such file or directory
avrdude: jtagmkI_close(): unsupported baudrate -1
</code></pre>

<p>所以默认端口必须覆盖,例如<code>/dev/ttyUSB0</code>. 测试可以下载,在线调试功能还在折腾中 :)</p>

<p>总之:硬件和设置一定必须向配合.</p>

<h4>软件:linux设备文件权限</h4>

<p>默认情况下普通用户是没有linux的设备文件的读写权限的.所以avarice可能会提示访问受限.</p>

<p>这时只要给avarice增加权限位即可.
1. 切换到root用户
2. chmod a+s /usr/bin/avrdude #赋予权限位
3. 切换回普通用户,继续操作即可.</p>

<h4>快捷键无效</h4>

<p>快捷键可能被fcitx输入法程序截获,尝试关闭输入法在试试快捷键,例如Ctrl+Shift+f 格式化(format)代码.</p>

<h4>编译程序下载后没反映</h4>

<p>暂时发现 项目->属性 -> C/C++ Build栏 -> Setting -> AVR Compiler(avr编译器)<br/>
-> Optimization(优化) -> Optimization Level(优化等级) 除了选择 (-O0)没有优化外,<br/>
其他选项生成的程序都无法执行(没效果) 暂时不知道什么原因 :(</p>

<h1>参考:</h1>

<ol>
<li>avr开发环境搭建教程(EN),本文主要就是参考/翻译它的. <a href="http://www.timteatro.net/2012/03/22/beginning-atmel-avr-development-in-linux-using-avr-eclipse-avr-gcc-and-avrdude/">http://www.timteatro.net/2012/03/22/beginning-atmel-avr-development-in-linux-using-avr-eclipse-avr-gcc-and-avrdude/</a></li>
<li>Linux下avr-Eclipse环境(EN):<a href="http://awawa.hariko.com/eclipse_avr_en.html">http://awawa.hariko.com/eclipse_avr_en.html</a></li>
<li>avrdude 命令说明(CN):<a href="http://blog.21ic.com/user1/69/archives/2005/1551.html">http://blog.21ic.com/user1/69/archives/2005/1551.html</a></li>
<li>淘宝上的USBasp下载器:<a href="http://tradearchive.taobao.com/trade/detail/tradeSnap.htm?spm=a1z09.2.9.147.BquMN6&amp;tradeID=79509563401088">http://tradearchive.taobao.com/trade/detail/tradeSnap.htm?spm=a1z09.2.9.147.BquMN6&amp;tradeID=79509563401088</a></li>
<li>ATmega128a开发板淘宝:<a href="http://tradearchive.taobao.com/trade/detail/tradeSnap.htm?spm=a1z09.2.9.184.BquMN6&amp;tradeID=79064532741088">http://tradearchive.taobao.com/trade/detail/tradeSnap.htm?spm=a1z09.2.9.184.BquMN6&amp;tradeID=79064532741088</a></li>
<li>开发板原理图(DropBox),包括厂商提供的学习手册:<a href="https://www.dropbox.com/sh/hyh2zcqd3px6iml/tOYBevw_Co">https://www.dropbox.com/sh/hyh2zcqd3px6iml/tOYBevw_Co</a></li>
<li>自制USBasp下载器(CN):<a href="http://www.amobbs.com/thread-723786-1-1.html">http://www.amobbs.com/thread-723786-1-1.html</a></li>
<li>AVR-jtag usb仿真器(也可以用来下载):<a href="http://item.taobao.com/item.htm?spm=0.0.0.46.W1V8IW&amp;id=2332186600">http://item.taobao.com/item.htm?spm=0.0.0.46.W1V8IW&amp;id=2332186600</a></li>
</ol>


<p>本文地址:<a href="http://zodiac1111.github.com/blog/2012/11/17/avr-mega128a-linux-env-set/">http://zodiac1111.github.com/blog/2012/11/17/avr-mega128a-linux-env-set/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lua实现简单的wireshark自定义协议解析]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/11/11/lua-wireshark-plug-in/"/>
    <updated>2012-11-11T13:27:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/11/11/lua-wireshark-plug-in</id>
    <content type="html"><![CDATA[<h3>主要参考:</h3>

<ol>
<li>简单参考中文 <a href="http://yoursunny.com/study/IS409/ScoreBoard.htm">http://yoursunny.com/study/IS409/ScoreBoard.htm</a></li>
<li>位操作 参考 <a href="http://blog.chinaunix.net/uid-24931444-id-3372735.html">http://blog.chinaunix.net/uid-24931444-id-3372735.html</a></li>
<li>api定义参考 <a href="http://www.wireshark.org/docs/wsug_html_chunked/lua_module_Proto.html">http://www.wireshark.org/docs/wsug_html_chunked/lua_module_Proto.html</a></li>
</ol>


<h3>使用的功能:</h3>

<ol>
<li>按位解析 <code>f_vsq_num</code></li>
<li>分类解析  <code>if bit.rshift(bit.band(buf(4,1):uint(), 0x40), 6) == 1 then</code></li>
<li>位操作 <code>bit.rshift(bit.band(buf(4,1):uint(), 0x40), 6)</code></li>
<li>树添加 <code>local farmehead = t:add(f_farmehead,buf(0,4))</code></li>
<li>分成函数实现 <code>function FT_change_farme(buf,pkt,root) ... end</code></li>
<li>按大小端解析16位整型数据,并添加进树 <code>local addr=t:add_le(f_addr,buf(2,2))</code></li>
<li>按字节流形式添加整体和各个部分的解释 <code>ProtoField.bytes("sd102.Tb","时间(Tb)",base.HEX)</code></li>
</ol>


<!-- more -->


<h3>大致摸样</h3>

<p><img src="http://zodiac1111.github.com/downloads/img/lua-wireshark.png"></p>

<h3>wireshark包</h3>

<p><a href="https://www.dropbox.com/s/fdb1941bf7f1o8v/lua.pcap">https://www.dropbox.com/s/fdb1941bf7f1o8v/lua.pcap</a></p>

<h3>代码</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="c1">-- lua wireshark 协议插件. file:hello.lua</span>
</span><span class='line'><span class="c1">--简单参考中文 http://yoursunny.com/study/IS409/ScoreBoard.htm</span>
</span><span class='line'><span class="c1">--位操作 参考 http://blog.chinaunix.net/uid-24931444-id-3372735.html</span>
</span><span class='line'><span class="c1">--api定义参考 http://www.wireshark.org/docs/wsug_html_chunked/lua_module_Proto.html</span>
</span><span class='line'><span class="k">do</span>
</span><span class='line'>  <span class="c1">--函数前向声明</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">FT_farme</span> <span class="c1">--解析单字节帧</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">FT_static_farme</span> <span class="c1">--解析固定长度帧</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">FT_change_farme</span> <span class="c1">--解析变长度帧</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">--协议名称为ScoreBoard，在Packet Details（中间可以展开的那部分）</span>
</span><span class='line'>  <span class="c1">--    窗格显示为sd102主站通讯规约</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">p_ScoreBoard</span> <span class="o">=</span> <span class="n">Proto</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">sd102&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">--协议的各个字段 标识符/第一字段</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_identifier</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">bytes</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.id&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">标识符/规约号之类&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_len</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint16</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.len&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">长度(字节)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">--所有可能</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_start</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.start&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">起始字节&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mh">0x68</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">长帧/变长帧&quot;</span><span class="p">,[</span><span class="mh">0x10</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">短帧/固定帧&quot;</span><span class="p">,[</span><span class="mh">0xE5</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">应答/单字节帧&quot;</span><span class="p">})</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_ctrl</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.ctrl&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">控制字节&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">-- 控制端到采集终端    </span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_funcode</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.funcode&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">功能码(FC)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">复位通信单元&quot;</span><span class="p">,[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">传送数据&quot;</span><span class="p">,[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">召唤链路状态&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">10</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">召唤1级用户数据&quot;</span><span class="p">,[</span><span class="mi">11</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">召唤2级用户数据&quot;</span><span class="p">},</span><span class="mh">0x0F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_fcv</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.fcv&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">帧计数有效位(FCV)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">帧计数位(FCB)的变化无效&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">帧计数位(FCB)的变化有效&quot;</span><span class="p">},</span><span class="mh">0x10</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_fcb</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.fcb&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">帧计数位(FCB)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">&quot;</span><span class="p">},</span><span class="mh">0x20</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_prm</span><span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.prm&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">启动报文位(PRM)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">采集端向控制站传输&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">控制站向采集端传输&quot;</span><span class="p">},</span><span class="mh">0x40</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">--非平衡传输,根据GBT18657.2-2002 5.1.2,传输方向位保留</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_dir</span><span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.dir&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">备用&quot;</span><span class="cm">--[[ 传输方向位(DIR)--]]</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">备用为0&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">备用,应为0&quot;</span><span class="p">},</span><span class="mh">0x80</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">-- 采集终端到控制端</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_funcode_rsp</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.funcode_rsp&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">功能码(FC)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">确认&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">链路忙,没有收到报文&quot;</span><span class="p">,[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">备用&quot;</span><span class="p">,[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">备用&quot;</span><span class="p">,[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">备用&quot;</span><span class="p">,[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">备用&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">制造厂和用户协商定义&quot;</span><span class="p">,[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">制造厂和用户协商定义&quot;</span><span class="p">,[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">以数据回答请求帧&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">没有所召唤的数据&quot;</span><span class="p">,[</span><span class="mi">11</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">以链路状态或访问请求回答请求帧&quot;</span><span class="p">},</span><span class="mh">0x0F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_dfc</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.dfc&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">数据流控制位(DFC)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">终端可以接收数据&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">终端的缓冲区已满&quot;</span><span class="p">},</span><span class="mh">0x10</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_acd</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.acd&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">要求访问位(ACD)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">从站没有1级用户数据要求访问&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">从站有1级用户数据要求访问&quot;</span><span class="p">},</span><span class="mh">0x20</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_addr</span><span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint16</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.addr&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">地址(uint16)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_addr1</span><span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.addr1&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">地址低字节&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_addr2</span><span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.addr2&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">地址高字节&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_p</span><span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.p&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">校验和&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_end</span><span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.end&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">结束符&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,{[</span><span class="mh">0x16</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">结束&quot;</span><span class="p">})</span>
</span><span class='line'>  <span class="c1">--变长帧 </span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_farmehead</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.farmehead&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">帧头&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_ASDU</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.ASDU&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">应用服务数据单元&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_len1</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.len1&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">长度1&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_len2</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.len2&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">长度2&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_typeID_up</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.typeID2_up&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">类型标识(TYP)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">未用&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">带时标的单点信息&quot;</span><span class="p">,[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">读电量返回帧&quot;</span><span class="p">,[</span><span class="mi">70</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">初始化结束&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">72</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">电能累计量数据终端设备的当前系统时间&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">128</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">电能累计量数据终端系统时间同步确认&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">162</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">读遥测量返回帧&quot;</span><span class="p">,[</span><span class="mi">163</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">读需量返回帧&quot;</span><span class="p">})</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_typeID_down</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.typeID2_down&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">类型标识(TYP)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">102</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">读一个所选定时间范围的带时标的单点信息的记录&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">103</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">读电能累计量数据终端设备的当前系统时间&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">120</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">读一个选定的时间范围和一个选定的地址范围的记帐（计费）电能累计量&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">128</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">电能累计量数据终端系统时间同步命令&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">172</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">读一个选定的时间范围和一个选定的地址范围的遥测量&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">174</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">读一个选定的时间范围和一个选定的地址范围的最大需量&quot;</span><span class="p">})</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_vsq</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.vsq&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">可变结构限定词(VSQ)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_sq</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.sq&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">息体寻址方法(SQ)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">每一个单个元素或综合元素由信息体地址寻址&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">一个顺序的类似的信息元素(见IEC60870-5-3 5.1.5)&quot;</span><span class="p">},</span><span class="mh">0x80</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_vsq_num</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.vsq_num&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">可变结构数目&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x7F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_cot</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.cot&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">传送原因(Cause Of Transmission)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_cot_t</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.cot_t&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">试验(Test)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">未试验&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">试验&quot;</span><span class="p">},</span><span class="mh">0x80</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_cot_pn</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.cot_pn&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">激活确认&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">肯定确认&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">否定确认&quot;</span><span class="p">},</span><span class="mh">0x40</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_cot_cot</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.cot_cot&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">传送原因&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">未用&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">试验(专用范围定义)&quot;</span><span class="p">,[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">周期、循环(专用范围定义)&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">自发（突发）&quot;</span><span class="p">,[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">初始化&quot;</span><span class="p">,[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">请求或被请求&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">激活(Act)&quot;</span><span class="p">,[</span><span class="mi">7</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">激活确认(actcon)&quot;</span><span class="p">,[</span><span class="mi">8</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">停止激活(deact)&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">9</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">停止激活确认(deactcon)&quot;</span><span class="p">,[</span><span class="mi">10</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">激活终止(actterm)&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">11</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">未用&quot;</span><span class="p">,[</span><span class="mi">12</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">未用&quot;</span><span class="p">,[</span><span class="mi">13</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">无所请求的数据记录&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">14</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">无所请求的应用服务数据单元――类型&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">15</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">由主站（控制站）发送的应用服务数据单元中的记录序号不可知&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">16</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">由主站（控制站）发送的应用服务数据单元中的地址说明不可知&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">17</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">无所请求的信息体&quot;</span><span class="p">,[</span><span class="mi">18</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">无所请求的累计时段&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">19</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">为将来兼容定义保留&quot;</span><span class="p">,</span><span class="cm">--[[[20-41]=&quot;未用&quot;,</span>
</span><span class='line'><span class="cm"> [42-47]=&quot;为将来兼容定义保留&quot;,[48-63]=&quot;为特殊应用(专用范围)&quot;,--]]</span>
</span><span class='line'>  <span class="p">[</span><span class="mi">48</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">时间同步(专用范围定义)&quot;</span><span class="p">},</span><span class="mh">0x3F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_SlaveAddr</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.SlaveAddr&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">站地址(Addr)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_recordAddr</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.recordAddr&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">信息体地址(IOA)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">--时间 ,其中有写位没解析 RSE</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">bytes</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">时间(Tb)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_ms</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint16</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_ms&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">毫秒(ms)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0xFF03</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_sec</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_sec&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">秒(sec)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0xFC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_min</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_min&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">分钟(min)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x3F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_tis</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_tis&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">费率陈述&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">断开OFF&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">合上ON&quot;</span><span class="p">},</span><span class="mh">0x40</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_iv</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_iv&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">时间陈述无效标志&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="p">{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">有效&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">无效&quot;</span><span class="p">},</span><span class="mh">0x80</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_hour</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_hour&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">小时(hour)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x1F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_day</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_day&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">日(day)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x1F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_week</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_week&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">周次(week)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0xE0</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_mon</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_mon&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">月(month)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x0F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_year</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_year&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">年(year)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x7F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_su</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_su&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">标准时间(SU)&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">标准时间&quot;</span><span class="p">,[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">夏时制&quot;</span><span class="p">},</span><span class="mh">0x80</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_pti</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_pti&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">功率费率&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">功率费率&quot;</span><span class="p">},</span><span class="mh">0xC0</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Tb_eti</span><span class="o">=</span><span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Tb_eti&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">能量费率&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,{[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">能量费率&quot;</span><span class="p">},</span><span class="mh">0x30</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_msgaddr_start</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.msgaddr&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">起始消息体地址&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_msgaddr_end</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.msgaddr&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">终止消息体地址&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_msg</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">string</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.msg&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">消息&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">--Ta</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Ta</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">bytes</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Ta&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">时间(Ta)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Ta_min</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Ta_min&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">分钟(min)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x3F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Ta_hour</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Ta_hour&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">小时(hour)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x1F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Ta_day</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Ta_day&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">日(day)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x3F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Ta_week</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Ta_week&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">周次(week)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0xE0</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Ta_mon</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Ta_mon&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">月(month)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x0F</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_Ta_year</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.Ta_year&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">年(year)&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="mh">0x7F</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">-- 操作,第二字段</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_operator</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.operator&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">操作&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">,</span>
</span><span class='line'>  <span class="c1">--这个字段的数字值都有相应的含义，可以自动对应成字符串</span>
</span><span class='line'>  <span class="p">{</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">取值&quot;</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">设定值&quot;</span><span class="p">,</span> <span class="p">[</span><span class="mi">128</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">设定值,应答&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">[</span><span class="mh">0x10</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">取颜色&quot;</span><span class="p">,</span> <span class="p">[</span><span class="mi">17</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">设定颜色&quot;</span><span class="p">,</span> <span class="p">[</span><span class="mi">144</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">设定颜色,应答&quot;</span><span class="p">})</span>
</span><span class='line'>  <span class="c1">--所有可能的字段都要定义，到时没有t:add就不会显示</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_left</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint32</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.left&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">左边数值&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_right</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint32</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.right&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">右边数值&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_red</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.red&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">红色&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_green</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.green&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">绿色&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_blue</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.blue&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">蓝色&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">DEC</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">f_onebyte</span> <span class="o">=</span> <span class="n">ProtoField</span><span class="p">.</span><span class="n">uint8</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">sd102.onebyte&quot;</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">单字节&quot;</span><span class="p">,</span><span class="n">base</span><span class="p">.</span><span class="n">HEX</span><span class="p">)</span>
</span><span class='line'>  <span class="n">p_ScoreBoard</span><span class="p">.</span><span class="n">fields</span> <span class="o">=</span> <span class="p">{</span> <span class="n">f_identifier</span><span class="p">,</span> <span class="n">f_operator</span><span class="p">,</span> <span class="n">f_left</span><span class="p">,</span> <span class="n">f_right</span><span class="p">,</span> <span class="n">f_red</span><span class="p">,</span> <span class="n">f_green</span><span class="p">,</span>           <span class="n">f_blue</span><span class="p">,</span><span class="n">f_onebyte</span><span class="p">,</span><span class="n">f_len</span><span class="p">,</span>
</span><span class='line'>  <span class="n">f_start</span><span class="p">,</span><span class="n">f_funcode</span><span class="p">,</span><span class="n">f_funcode_rsp</span><span class="p">,</span><span class="n">f_ctrl</span><span class="p">,</span>
</span><span class='line'>  <span class="n">f_fcv</span><span class="p">,</span><span class="n">f_dfc</span><span class="p">,</span><span class="n">f_fcb</span><span class="p">,</span><span class="n">f_acd</span><span class="p">,</span><span class="n">f_prm</span><span class="p">,</span><span class="n">f_dir</span><span class="p">,</span><span class="n">f_addr</span><span class="p">,</span><span class="n">f_addr1</span><span class="p">,</span><span class="n">f_addr2</span><span class="p">,</span><span class="n">f_p</span><span class="p">,</span><span class="n">f_end</span><span class="p">,</span>
</span><span class='line'>  <span class="n">f_farmehead</span><span class="p">,</span><span class="n">f_len1</span><span class="p">,</span><span class="n">f_len2</span><span class="p">,</span><span class="n">f_ASDU</span><span class="p">,</span><span class="n">f_typeID_up</span><span class="p">,</span><span class="n">f_typeID_down</span><span class="p">,</span><span class="n">f_vsq</span><span class="p">,</span><span class="n">f_sq</span><span class="p">,</span><span class="n">f_vsq_num</span><span class="p">,</span>
</span><span class='line'>  <span class="n">f_cot</span><span class="p">,</span><span class="n">f_cot_t</span><span class="p">,</span><span class="n">f_cot_pn</span><span class="p">,</span><span class="n">f_cot_cot</span><span class="p">,</span><span class="n">f_SlaveAddr</span><span class="p">,</span><span class="n">f_recordAddr</span><span class="p">,</span>
</span><span class='line'>  <span class="n">f_Tb</span><span class="p">,</span><span class="n">f_Tb_ms</span><span class="p">,</span><span class="n">f_Tb_sec</span><span class="p">,</span><span class="n">f_Tb_min</span><span class="p">,</span><span class="n">f_Tb_tis</span><span class="p">,</span><span class="n">f_Tb_iv</span><span class="p">,</span><span class="n">f_Tb_hour</span><span class="p">,</span><span class="n">f_Tb_day</span><span class="p">,</span><span class="n">f_Tb_week</span><span class="p">,</span> <span class="c1">--Tb</span>
</span><span class='line'>  <span class="n">f_Tb_mon</span><span class="p">,</span><span class="n">f_Tb_year</span><span class="p">,</span><span class="n">f_Tb_su</span><span class="p">,</span><span class="n">f_Tb_pti</span><span class="p">,</span><span class="n">f_Tb_eti</span><span class="p">,</span>
</span><span class='line'>  <span class="n">f_msgaddr_start</span><span class="p">,</span><span class="n">f_msgaddr_end</span><span class="p">,</span>
</span><span class='line'>  <span class="n">f_Ta</span><span class="p">,</span> <span class="n">f_Ta_min</span><span class="p">,</span><span class="n">f_Ta_hour</span><span class="p">,</span><span class="n">f_Ta_day</span><span class="p">,</span><span class="n">f_Ta_week</span><span class="p">,</span><span class="n">f_Ta_mon</span><span class="p">,</span><span class="n">f_Ta_year</span><span class="p">}</span> <span class="c1">--Ta</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">local</span> <span class="n">data_dis</span> <span class="o">=</span> <span class="n">Dissector</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">data&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">-- 函数:解码</span>
</span><span class='line'>  <span class="kd">local</span> <span class="k">function</span> <span class="nf">ScoreBoard_dissector</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">buf_len</span> <span class="o">=</span> <span class="n">buf</span><span class="p">:</span><span class="n">len</span><span class="p">();</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">buf_len</span> <span class="o">&lt;</span> <span class="mi">1</span> <span class="k">then</span>  <span class="c1">--长度 &lt; 1 绝对错误</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">==</span> <span class="mh">0xe5</span> <span class="k">then</span> <span class="c1">--1.单字节帧解析</span>
</span><span class='line'>          <span class="n">FT_farme</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">==</span> <span class="mh">0x10</span> <span class="k">then</span> <span class="c1">--2.固定帧长帧解析</span>
</span><span class='line'>          <span class="n">FT_static_farme</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">==</span> <span class="mh">0x68</span> <span class="k">then</span> <span class="c1">--3.变帧长帧解析</span>
</span><span class='line'>          <span class="n">FT_change_farme</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="n">buf_len</span> <span class="o">&lt;</span> <span class="mi">17</span> <span class="k">then</span> <span class="k">return</span> <span class="kc">false</span> <span class="k">end</span>
</span><span class='line'>      <span class="c1">--取得前16字节identifier字段的值</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">v_identifier</span> <span class="o">=</span> <span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">16</span><span class="p">)</span>
</span><span class='line'>      <span class="c1">--验证identifier是否正确</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">((</span><span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">226</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">203</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">181</span><span class="p">)</span>
</span><span class='line'>          <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">128</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">203</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">9</span><span class="p">)</span>
</span><span class='line'>          <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">78</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">186</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">163</span><span class="p">)</span>
</span><span class='line'>          <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">107</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">246</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">11</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">7</span><span class="p">)</span>
</span><span class='line'>          <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">206</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">149</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">63</span><span class="p">)</span>
</span><span class='line'>          <span class="ow">or</span> <span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span><span class="o">~=</span><span class="mi">43</span><span class="p">))</span> <span class="k">then</span>
</span><span class='line'>          <span class="c1">--不正确就不是我的协议  </span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="c1">--取得operator的值</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">v_operator</span> <span class="o">=</span> <span class="n">buf</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">i_operator</span> <span class="o">=</span> <span class="n">v_operator</span><span class="p">:</span><span class="n">uint</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">--现在知道是我的协议了，放心大胆添加Packet Details</span>
</span><span class='line'>      <span class="c1">--开始添加显示的东西</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">t</span> <span class="o">=</span> <span class="n">root</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">p_ScoreBoard</span><span class="p">,</span><span class="n">buf</span><span class="p">)</span> <span class="c1">--添加协议</span>
</span><span class='line'>      <span class="c1">--在Packet List窗格的Protocol列</span>
</span><span class='line'>      <span class="n">pkt</span><span class="p">.</span><span class="n">cols</span><span class="p">.</span><span class="n">protocol</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">102&quot;</span> <span class="c1">--显示在第一栏的协议名称</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_identifier</span><span class="p">,</span><span class="n">v_identifier</span><span class="p">)</span> <span class="c1">--域1 标识符</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_operator</span><span class="p">,</span><span class="n">v_operator</span><span class="p">)</span> <span class="c1">--域2 操作符</span>
</span><span class='line'>      <span class="c1">-- 域3 操作数,分三种</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">((</span><span class="n">i_operator</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">i_operator</span> <span class="o">==</span> <span class="mi">128</span><span class="p">))</span> <span class="ow">and</span> <span class="p">(</span><span class="n">buf_len</span> <span class="o">&gt;=</span> <span class="mi">25</span><span class="p">)</span> <span class="k">then</span>
</span><span class='line'>          <span class="c1">--把存在的字段逐个添加进去</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_left</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_right</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">21</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span><span class='line'>      <span class="k">elseif</span> <span class="p">((</span><span class="n">i_operator</span> <span class="o">==</span> <span class="mi">17</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">i_operator</span> <span class="o">==</span> <span class="mi">144</span><span class="p">))</span> <span class="ow">and</span> <span class="p">(</span><span class="n">buf_len</span> <span class="o">&gt;=</span> <span class="mi">20</span><span class="p">)</span> <span class="k">then</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_red</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_green</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_blue</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">19</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">elseif</span> <span class="n">i_operator</span> <span class="o">==</span> <span class="mi">0</span> <span class="k">then</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">取值操作 不需要操作数&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">elseif</span> <span class="n">i_operator</span> <span class="o">==</span> <span class="mh">0x10</span> <span class="k">then</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">取值颜色 不需要操作数&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">未知的操作符!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">-- **********解析单字节数据帧函数************</span>
</span><span class='line'>  <span class="k">function</span> <span class="nf">FT_farme</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>      <span class="c1">--local p_ScoreBoard = Proto(&quot;sd102&quot;,&quot;sd102&quot;)</span>
</span><span class='line'>      <span class="c1">--p_ScoreBoard.fields = {f_onebyte}</span>
</span><span class='line'>      <span class="c1">--添加协议</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">t</span> <span class="o">=</span> <span class="n">root</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">p_ScoreBoard</span><span class="p">,</span><span class="n">buf</span><span class="p">,</span><span class="kc">nil</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">长度=&quot;</span><span class="p">,</span><span class="n">f_len</span><span class="p">,</span><span class="n">buf</span><span class="p">:</span><span class="n">len</span><span class="p">(),</span><span class="s2">&quot;</span><span class="s">字节&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">pkt</span><span class="p">.</span><span class="n">cols</span><span class="p">.</span><span class="n">protocol</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">sd102-单字符&quot;</span> <span class="c1">--显示在第一栏的协议名称</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_start</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="c1">--t:add(&quot;单字节数据&quot;)</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">--************短帧/固定长帧*********</span>
</span><span class='line'>  <span class="k">function</span> <span class="nf">FT_static_farme</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">len</span> <span class="o">=</span> <span class="n">buf</span><span class="p">:</span><span class="n">len</span><span class="p">();</span>
</span><span class='line'>      <span class="c1">--添加协议</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">t</span> <span class="o">=</span> <span class="n">root</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">p_ScoreBoard</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">len</span><span class="p">),</span><span class="kc">nil</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">长度=&quot;</span><span class="p">,</span><span class="n">f_len</span><span class="p">,</span><span class="n">buf</span><span class="p">:</span><span class="n">len</span><span class="p">(),</span><span class="s2">&quot;</span><span class="s">字节&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">pkt</span><span class="p">.</span><span class="n">cols</span><span class="p">.</span><span class="n">protocol</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">sd102-定长帧&quot;</span> <span class="c1">--显示在第一栏的协议名称</span>
</span><span class='line'>      <span class="c1">--开始判断:</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">len</span> <span class="o">~=</span> <span class="mi">6</span> <span class="k">then</span> <span class="c1">--短帧的长度固定,长度不对,错误</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">len != 6 ,len=&quot;</span><span class="p">,</span><span class="n">len</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">buf</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">~=</span> <span class="mh">0x16</span> <span class="k">then</span> <span class="c1">--结束符错误</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">结束符!=0x16,结束符=&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">())</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="c1">--校验和</span>
</span><span class='line'>      <span class="c1">--全部判断完成:</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_start</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">ctrlbyte</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_ctrl</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">bit</span><span class="p">.</span><span class="n">rshift</span><span class="p">(</span><span class="n">bit</span><span class="p">.</span><span class="n">band</span><span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">(),</span> <span class="mh">0x40</span><span class="p">),</span> <span class="mi">6</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">then</span> <span class="c1">--控制站向采集端</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_funcode</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_fcv</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_fcb</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_prm</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_dir</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">else</span> <span class="c1">--采集端 向控制端</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_funcode_rsp</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_dfc</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_acd</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_prm</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_dir</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">addr</span><span class="o">=</span><span class="n">t</span><span class="p">:</span><span class="n">add_le</span><span class="p">(</span><span class="n">f_addr</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'>      <span class="n">addr</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_addr1</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">addr</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_addr2</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_p</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_end</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="c1">--t:add(&quot;单字节数据&quot;) </span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">--**********长帧/变长帧**************</span>
</span><span class='line'>  <span class="k">function</span> <span class="nf">FT_change_farme</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">len</span> <span class="o">=</span> <span class="n">buf</span><span class="p">:</span><span class="n">len</span><span class="p">();</span>
</span><span class='line'>      <span class="c1">--添加协议</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">t</span> <span class="o">=</span> <span class="n">root</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">p_ScoreBoard</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">len</span><span class="p">),</span><span class="kc">nil</span><span class="p">,</span><span class="s2">&quot;</span><span class="s">长度=&quot;</span><span class="p">,</span><span class="n">f_len</span><span class="p">,</span><span class="n">buf</span><span class="p">:</span><span class="n">len</span><span class="p">(),</span><span class="s2">&quot;</span><span class="s">字节&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">pkt</span><span class="p">.</span><span class="n">cols</span><span class="p">.</span><span class="n">protocol</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">sd102-变长帧&quot;</span> <span class="c1">--显示在第一栏的协议名称</span>
</span><span class='line'>      <span class="c1">--开始判断:</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">len</span> <span class="o">&lt;</span> <span class="mi">6</span> <span class="k">then</span> <span class="c1">--长度太小错误</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">长度太小:&quot;</span><span class="p">,</span><span class="n">len</span><span class="p">)</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">buf</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">~=</span> <span class="mh">0x68</span> <span class="k">then</span> <span class="c1">--帧边界 两个0x68</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">边界不等于0x68&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">())</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">~=</span> <span class="n">buf</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="k">then</span> <span class="c1">--两个长度必须相同</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">长度不等&quot;</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">(),</span><span class="n">buf</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">())</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">buf</span><span class="p">(</span><span class="n">len</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">~=</span> <span class="mh">0x16</span> <span class="k">then</span> <span class="c1">--结束符错误</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">false</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="c1">--全部判断完成:</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_start</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">farmehead</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_farmehead</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">))</span>
</span><span class='line'>      <span class="n">farmehead</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_start</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">farmehead</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_len1</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">farmehead</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_len2</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">farmehead</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_start</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">ctrlbyte</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_ctrl</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">bit</span><span class="p">.</span><span class="n">rshift</span><span class="p">(</span><span class="n">bit</span><span class="p">.</span><span class="n">band</span><span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">(),</span> <span class="mh">0x40</span><span class="p">),</span> <span class="mi">6</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">then</span> <span class="c1">--控制站向采集端</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_funcode</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_fcv</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_fcb</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_prm</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_dir</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">else</span> <span class="c1">--采集端 向控制端</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_funcode_rsp</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_dfc</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_acd</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_prm</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="n">ctrlbyte</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_dir</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_addr1</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_addr2</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">bit</span><span class="p">.</span><span class="n">rshift</span><span class="p">(</span><span class="n">bit</span><span class="p">.</span><span class="n">band</span><span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">(),</span> <span class="mh">0x40</span><span class="p">),</span> <span class="mi">6</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">then</span> <span class="c1">--控制站向采集端</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_typeID_down</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">else</span> <span class="c1">--采集端 向控制端</span>
</span><span class='line'>          <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_typeID_up</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">vsq</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_vsq</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">vsq</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_sq</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">vsq</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_vsq_num</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">cot</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_cot</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">cot</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_cot_t</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">cot</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_cot_pn</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">cot</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_cot_cot</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_SlaveAddr</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_recordAddr</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="c1">--按上下行分类</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">bit</span><span class="p">.</span><span class="n">rshift</span><span class="p">(</span><span class="n">bit</span><span class="p">.</span><span class="n">band</span><span class="p">(</span><span class="n">buf</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">(),</span> <span class="mh">0x40</span><span class="p">),</span> <span class="mi">6</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span> <span class="k">then</span> <span class="c1">--下行</span>
</span><span class='line'>          <span class="c1">--按TYP分类</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">buf</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">==</span> <span class="mi">103</span> <span class="k">then</span> <span class="c1">--读终端时间,</span>
</span><span class='line'>              <span class="c1">--什么都不做,信息体为空</span>
</span><span class='line'>          <span class="k">elseif</span> <span class="n">buf</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">==</span> <span class="mi">128</span> <span class="k">then</span> <span class="c1">--设置终端时间</span>
</span><span class='line'>              <span class="kd">local</span> <span class="n">Tb</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>            
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_ms</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_sec</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_min</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_tis</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_iv</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_hour</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_su</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_day</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_week</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_mon</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_pti</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_eti</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_year</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">19</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="c1">--读一个选定的时间范围和一个选定的地址范围的记帐（计费）电能累计量</span>
</span><span class='line'>          <span class="k">elseif</span> <span class="n">buf</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">==</span> <span class="mi">120</span> <span class="k">then</span>
</span><span class='line'>              <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_msgaddr_start</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_msgaddr_end</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="kd">local</span> <span class="n">Ta_start</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_start</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_year</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">19</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_start</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_mon</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_start</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_day</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_start</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_hour</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_start</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_min</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_start</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_week</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="kd">local</span> <span class="n">Ta_end</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">5</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_end</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_year</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">24</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_end</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_mon</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">23</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_end</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_day</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_end</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_hour</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">21</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_end</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_min</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">20</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Ta_end</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Ta_week</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">22</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>      <span class="k">else</span> <span class="c1">--上行 </span>
</span><span class='line'>          <span class="k">if</span> <span class="n">buf</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">==</span> <span class="mi">72</span> <span class="k">then</span> <span class="c1">--返回当前系统时间</span>
</span><span class='line'>              <span class="kd">local</span> <span class="n">Tb</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>            
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_ms</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_sec</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_min</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_tis</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_iv</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_hour</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_su</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_day</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_week</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_mon</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_pti</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_eti</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_year</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">19</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="c1">--Tb:add(&quot;上行,72&quot;)</span>
</span><span class='line'>          <span class="k">elseif</span> <span class="n">buf</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">1</span><span class="p">):</span><span class="n">uint</span><span class="p">()</span> <span class="o">==</span> <span class="mi">128</span> <span class="k">then</span> <span class="c1">--电能累计量数据终端系统时间同步确认</span>
</span><span class='line'>              <span class="kd">local</span> <span class="n">Tb</span> <span class="o">=</span> <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="mi">7</span><span class="p">))</span>            
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_ms</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="mi">2</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_sec</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_min</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_tis</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_iv</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_hour</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_su</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_day</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_week</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_mon</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_pti</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_eti</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>              <span class="n">Tb</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_Tb_year</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="mi">19</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="c1">-- 结束</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_p</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="n">len</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="n">t</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="n">f_end</span><span class="p">,</span><span class="n">buf</span><span class="p">(</span><span class="n">len</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1">-- 全局函数?api?</span>
</span><span class='line'>  <span class="k">function</span> <span class="nc">p_ScoreBoard</span><span class="p">.</span><span class="nf">dissector</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">ScoreBoard_dissector</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span> <span class="k">then</span>
</span><span class='line'>          <span class="c1">--valid ScoreBoard diagram</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="c1">--data这个dissector几乎是必不可少的；当发现不是我的协议时，就应该调用data</span>
</span><span class='line'>          <span class="n">data_dis</span><span class="p">:</span><span class="n">call</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span><span class="n">pkt</span><span class="p">,</span><span class="n">root</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">local</span> <span class="n">tcp_encap_table</span> <span class="o">=</span> <span class="n">DissectorTable</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">tcp.port&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">--只需要处理UDP1127端口就可以了</span>
</span><span class='line'>  <span class="n">tcp_encap_table</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="mi">10003</span><span class="p">,</span><span class="n">p_ScoreBoard</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tcp_encap_table</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="mi">10004</span><span class="p">,</span><span class="n">p_ScoreBoard</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tcp_encap_table</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="mi">10005</span><span class="p">,</span><span class="n">p_ScoreBoard</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tcp_encap_table</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="mi">35243</span><span class="p">,</span><span class="n">p_ScoreBoard</span><span class="p">)</span>
</span><span class='line'>  <span class="n">tcp_encap_table</span><span class="p">:</span><span class="n">add</span><span class="p">(</span><span class="mi">50187</span><span class="p">,</span><span class="n">p_ScoreBoard</span><span class="p">)</span>
</span><span class='line'>  <span class="c1">--udp_encap_table:add(10003,p_ScoreBoard)</span>
</span><span class='line'>  <span class="c1">--udp_encap_table:add(10001,p_ScoreBoard)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译 goldendict 笔记]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/09/29/build-goldendict-from-source/"/>
    <updated>2012-09-29T22:30:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/09/29/build-goldendict-from-source</id>
    <content type="html"><![CDATA[<p>官网:<a href="http://goldendict.org/">http://goldendict.org/</a>.</p>

<p>官方编译介绍:<a href="http://goldendict.org/buildfromgit.php">http://goldendict.org/buildfromgit.php</a>.</p>

<p>在Fedora 17上编译可能出现的一些小问题:</p>

<p><strong>1.</strong><code>articleview.hh:7:20: 致命错误：QWebView：没有那个文件或目录</code></p>

<p>缺少qt的某个东西的头文件,安装即可:<code>yum install qtwebkit-devel</code></p>

<p><strong>2.</strong><code>hotkeywrapper.hh:11:35: 致命错误：X11/extensions/record.h：没有那个文件或目录</code></p>

<p>缺少X11开发用的头文件,安装:<code>yum install libXtst-devel</code></p>

<p><strong>3.</strong><code>articleview.cc:37:32:致命错误：phonon/audiooutput.h：没有那个文件或phonon-devel.i686目录</code></p>

<p>安装:<code>yum install phonon-devel</code></p>

<p><strong>4.</strong><code>decompress.cc:5:19: 致命错误：bzlib.h：没有那个文件或目录</code></p>

<p>安装:<code>yum install bzip2-devel</code></p>

<p><strong>5.</strong>安装到应用程序目录</p>

<p>执行完<code>make</code>之后可以执行<code>su -c 'make install'</code>将图标等复制到特定的目录中.</p>

<h2>goldendict词典下载</h2>

<p>星际译王词典:<a href="http://abloz.com/huzheng/stardict-dic">http://abloz.com/huzheng/stardict-dic</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 githubRepoWidget 展示 github 项目]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/09/20/otcopress-githubrepowidget/"/>
    <updated>2012-09-20T22:55:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/09/20/otcopress-githubrepowidget</id>
    <content type="html"><![CDATA[<script src="http://zodiac1111.github.com/javascripts/libs/jquery.min.js"></script>


<script type="text/javascript" src="http://zodiac1111.github.com/javascripts/libs/jquery.githubRepoWidget.min.js"></script>


<p>使用githubRepoWidget在otcopress上展示项目的方法.</p>

<h1>先看效果:</h1>

<p>例子1 Linux kernel:</p>

<div class="github-widget" data-repo="torvalds/linux"></div>


<p>例子2 githubRepoWidget:</p>

<div class="github-widget" data-repo="JoelSutherland/GitHub-jQuery-Repo-Widget"></div>


<!-- more -->


<h1>介绍:</h1>

<p>项目地址在github上: <a href="https://github.com/JoelSutherland/GitHub-jQuery-Repo-Widget">https://github.com/JoelSutherland/GitHub-jQuery-Repo-Widget</a></p>

<h3>配置:</h3>

<p>复制下载的<code>jquery.githubRepoWidget.min.js</code>到本地博客目录<code>octopress/source/javascripts/libs</code>下</p>

<h3>启用:</h3>

<p>方式1:局部</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;/javascripts/libs/jquery.githubRepoWidget.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;github-widget&quot;</span> <span class="nx">data</span><span class="o">-</span><span class="nx">repo</span><span class="o">=</span><span class="s2">&quot;JoelSutherland/GitHub-jQuery-Repo-Widget&quot;</span><span class="o">&gt;&lt;</span><span class="err">/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>优点:仅在使用widget的页面才加载jquery.min.js等文件.减少不必要的耦合.</li>
<li>缺点:引用时需要添加较多(三行)的代码.</li>
</ul>


<p>方式2:全局</p>

<p>在<code>octopress/source/_includes/custom/head.html</code>或其他全局页面文件增加:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;/javascripts/libs/jquery.githubRepoWidget.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>在需要展示项目时,这样添加:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;github-widget&quot;</span> <span class="nx">data</span><span class="o">-</span><span class="nx">repo</span><span class="o">=</span><span class="s2">&quot;JoelSutherland/GitHub-jQuery-Repo-Widget&quot;</span><span class="o">&gt;&lt;</span><span class="err">/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>data-repo</code>项填写项目名称即可,如上例的<code>JoelSutherland/GitHub-jQuery-Repo-Widget</code>.</p>

<ul>
<li>优点:引用方便,仅需一行代码.</li>
<li>缺点:在不需要显示widget的页面也会加载jquery.min.js等文件,浪费网络资源.<br/>
修改otcopress项目的文件,可能会存在问题.

<h3>其他:</h3>

<p>暂无.</p></li>
</ul>


<h1>资料:</h1>

<ol>
<li>项目github:<a href="https://github.com/JoelSutherland/GitHub-jQuery-Repo-Widget">https://github.com/JoelSutherland/GitHub-jQuery-Repo-Widget</a></li>
<li>OSCHINA 增加软件与 Github 的集成:<a href="http://www.oschina.net/news/30679/oschina-projects-integration-with-github">http://www.oschina.net/news/30679/oschina-projects-integration-with-github</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在线分析转换标准 float 型数据]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/09/20/online-ieee-754-analysis-binary-decimal-converter/"/>
    <updated>2012-09-20T19:54:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/09/20/online-ieee-754-analysis-binary-decimal-converter</id>
    <content type="html"><![CDATA[<p>计算机中float型数据以IEEE-754标准存储,例如<code>1234.5678</code>存储为<code>0x449A522B</code>(32位).</p>

<p>使用二进制表示即:</p>

<pre><code>01000100 10011010 01010010 00101011
</code></pre>

<p>根据IEEE754 Single precision 32-bit标准的定义:</p>

<p><img src="http://zodiac1111.github.com/downloads/img/IEEE-754-float.png">
通用公式: <code>实际数值 = sign * 2^exponent * mantissa</code></p>

<p>一些特殊的值,如正无穷等,参见维基百科.</p>

<p>更多的分析和在线转换参见参考资料.</p>

<h2>参考资料</h2>

<ol>
<li>维基百科:<a href="https://zh.wikipedia.org/zh/IEEE_754">https://zh.wikipedia.org/zh/IEEE_754</a></li>
<li>在线分析:<a href="http://babbage.cs.qc.cuny.edu/IEEE-754/">http://babbage.cs.qc.cuny.edu/IEEE-754/</a></li>
<li>在线转换:<a href="http://www.binaryconvert.com/">http://www.binaryconvert.com/</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[chromium 预览 pdf 文件]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/09/20/chromium-pdf-viewer/"/>
    <updated>2012-09-20T19:46:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/09/20/chromium-pdf-viewer</id>
    <content type="html"><![CDATA[<p>chrome使用libpdf.so库,这个库不是自由软件,所以chromium默认没有带.
chrome默认自带的库默认路径为:<code>/opt/google/chrome/libpdf.so</code></p>

<h2>复制chrome的pdf库</h2>

<p>复制 <code>/opt/google/chrome/libpdf.so</code>到chrome-linux(chromium)下</p>

<p>或许需要在浏览器中键入<code>chrome://plugins/</code>,使能Chrome PDF Viewer插件.</p>

<h1>参考资料</h1>

<ol>
<li>简单的解决方式:<a href="http://askubuntu.com/questions/12584/why-doesnt-chromium-have-chrome-pdf-viewer-plugin">http://askubuntu.com/questions/12584/why-doesnt-chromium-have-chrome-pdf-viewer-plugin</a></li>
<li>chromium issues:<a href="https://code.google.com/p/chromium/issues/detail?id=50852#c16">https://code.google.com/p/chromium/issues/detail?id=50852#c16</a></li>
<li>libpdf.so</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rake 自动补全 task]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/09/19/rake-completion-in-bash/"/>
    <updated>2012-09-19T21:07:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/09/19/rake-completion-in-bash</id>
    <content type="html"><![CDATA[<p>在使用octopress写文章时有些命令记不太全,如<code> new_post["title"]</code>,<code>rake generate</code>,<code>rake preview</code>,<code>rake deploy</code>,<code>rake gen_deploy</code>.</p>

<p>那么想到既然bash中make可以自动补全目标(target),那么rake应该也可以有这样的功能吧.<br/>
于是在git找到了 rake-completion 这个项目:</p>

<script src="http://zodiac1111.github.com/javascripts/libs/jquery.min.js"></script>


<div class="github-widget" data-repo="ai/rake-completion"></div>


<p>网址:<a href="https://github.com/ai/rake-completion">https://github.com/ai/rake-completion</a></p>

<h2>安装</h2>

<p>安装也很简单,如<code>README</code>文件中<code>other unix-like</code>一节指示:</p>

<p>复制<code>rake</code>文件到<code>/etc/bash_completion.d/</code>目录下(需要root权限):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>su -c 'cp ./rake /etc/bash_completion.d/'</span></code></pre></td></tr></table></div></figure>


<h2>使用</h2>

<p>需要补全的时候按<code>Tab</code>键就好啦~,效果如下:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[user1@localhost octopress]$ rake &lt;Tab>
</span><span class='line'>clean                     isolate[filename]         set_root_dir[dir]
</span><span class='line'>copydot[source,dest]      list                      setup_github_pages[repo]
</span><span class='line'>deploy                    new_page[filename]        update_source[theme]
</span><span class='line'>gen_deploy                new_post[title]           update_style[theme]
</span><span class='line'>generate                  preview                   watch
</span><span class='line'>install[theme]            push
</span><span class='line'>integrate                 rsync</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux/Fedora 17下安装配置NFS服务]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/09/17/linux-fedora-17-install-nfs-server/"/>
    <updated>2012-09-17T21:23:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/09/17/linux-fedora-17-install-nfs-server</id>
    <content type="html"><![CDATA[<h1>NFS服务器安装和配置</h1>

<p>OS:fedora17.i686 &amp; fedora17.x86_64 &amp; f17beta.i686 &amp; f17beta.x86-64 <br/>
现在已经改成不用 imapXXXX的了
改成 守护进程rpc.nfsd
安装守护进程程序:</p>

<ol>
<li>搜索:<code>yum search nfs</code></li>
<li>得到:<code>nfs-utils.i686 : NFS utilities and supporting clients and daemons for the kernel NFS server</code><br/>
 看描述就是这货了.</li>
<li>安装:<code>yum install nfs-utils</code></li>
<li>使用:</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpc.nfsd [数量]        #设置最大线程
</span><span class='line'>man 8 rpc.nfsd        #查看 帮助</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<h2>配置可用NFS服务器的目录</h2>

<p>使用您喜欢的文本编辑器编辑<code>/etc/exports</code>文件
例如:<code>vi /etc/exports</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/mnt         127.0.0.1(ro,sync)
</span><span class='line'>共享目录          主机名   (权限)</span></code></pre></td></tr></table></div></figure>


<p>其中:</p>

<ul>
<li>共享目录  服务器共享的目录</li>
<li>主机名 指示能够访问这个共享目录的主机</li>
<li>权限    指示主机访问该共享目录的权限

<ol>
<li>ro=readonly只读 rw=读写</li>
<li>sync是设置NFS服务器同步写磁盘，不会导致数据的丢失

<h2>关闭防火墙(如果你和我一样不太了解如何配置防火墙的话)</h2></li>
</ol>
</li>
</ul>


<h2>启用新的配置</h2>

<p><code>exportfs</code> 指令主要的三个作用：<br/>
1. <code>exportfs -rv</code>   重新读取共享配置文件，马上生效 <br/>
2. <code>exportfs -auv</code>  马上停止所有本机上的NFS共享，并不改变 /etc/exports 文件的内容，只是当前停止共享<br/>
3. <code>exportfs -av</code>   显示所有当前机器上的NFS共享目录信息</p>

<h2>测试</h2>

<h3>启用挂载</h3>

<p>启动服务:</p>

<p><code>systemctl restart nfs-server.service</code></p>

<p>In older versions of Fedora (for instance Fedora 14),</p>

<p><code>su -c 'service nfs restart'</code></p>

<p>或?且</p>

<pre><code>rpc.mountd  
</code></pre>

<p>否则在下一步挂载可能出现:<br/>
mount.nfs: access denied by server while mounting 127.0.0.1:/home<br/>
或者在输入&#8221;mount -t nfs 127.0.0.1:&#8221;后按Tab键补全<br/>
:rpc mount export: RPC: Unable to receive; errno = Connection refused</p>

<h3>挂载</h3>

<p></del>貌似只能挂载 /home 这样的一级目录 像/home/tom 这样的目录就不行??</del><br/>
像/home/tom/doc/nfsroot 这样的目录必须保证这条路径<strong>所有文件夹</strong>都是有相应的权限的.<br/>
<code>chmod -R</code>或许会用得着 <br/>
即/home 得有(读写)权限 /home/tom 也一样 /home/tom/doc 也一样. 仅仅nfsroot文件夹有读写权限是不行的. <br/>
在挂在时还是会提示没有访问权限&#8230;..</p>

<pre><code>mount -t nfs 127.0.0.1:/home    /mnt
挂载 -t 类型 把远端/home    (挂在)   到/mnt
#将127.0.0.1:/home 挂载到本机的/mnt目录下
</code></pre>

<h3>卸载</h3>

<pre><code>unomt /mnt
</code></pre>

<h1>参考</h1>

<p>=====<br/>
1. <a href="http://fedoraproject.org/wiki/Administration_Guide_Draft/NFS">Fedora官方帮助文档</a><br/>
2. 查看错误日志<code>cat /var/log/messages | grep mount</code> 来自<a href="http://liuzhigong.blog.163.com/blog/static/17827237520115305226932/">这里</a><br/>
3. 图形化的配置工具 <code>yum install system-config-nfs.noarch</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux/Fedora 17 安装man手册]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/09/17/linux-fedora-17-install-man/"/>
    <updated>2012-09-17T21:18:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/09/17/linux-fedora-17-install-man</id>
    <content type="html"><![CDATA[<pre><code>yum install man-pages
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 octopress 一些错误和解决方式]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/09/15/some-octopress-oops/"/>
    <updated>2012-09-15T19:21:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/09/15/some-octopress-oops</id>
    <content type="html"><![CDATA[<h1>生成错误</h1>

<p>错误现象类似这样:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/home/use1/.gem/ruby/1.9.1/gems/maruku-0.6.0/lib/maruku/input/parse_doc.rb:22:in `&lt;top (required)>': iconv will be deprecated in the future, use String#encode instead.
</span><span class='line'>Configuration from /home/use1/blog/octopress/_config.yml
</span><span class='line'>Building site: source -> public
</span><span class='line'>/usr/share/ruby/psych.rb:203:in `parse': (&lt;unknown>): found unexpected end of stream while scanning a quoted scalar at line 3 column 8 (Psych::SyntaxError)
</span><span class='line'>  from /usr/share/ruby/psych.rb:203:in `parse_stream'
</span><span class='line'>  from /usr/share/ruby/psych.rb:151:in `parse'
</span><span class='line'>  from /usr/share/ruby/psych.rb:127:in `load'
</span><span class='line'>  from /home/use1/.gem/ruby/1.9.1/gems/jekyll-0.11.2/lib/jekyll/convertible.rb:33:in `read_yaml'
</span><span class='line'>  from /home/use1/.gem/ruby/1.9.1/gems/jekyll-0.11.2/lib/jekyll/post.rb:39:in `initialize'
</span><span class='line'>  from /home/use1/blog/octopress/plugins/preview_unpublished.rb:23:in `new'
</span><span class='line'>  from /home/use1/blog/octopress/plugins/preview_unpublished.rb:23:in `block in read_posts'
</span><span class='line'>  from /home/use1/blog/octopress/plugins/preview_unpublished.rb:21:in `each'
</span><span class='line'>  from /home/use1/blog/octopress/plugins/preview_unpublished.rb:21:in `read_posts'
</span><span class='line'>  from /home/use1/.gem/ruby/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:128:in `read_directories'
</span><span class='line'>  from /home/use1/.gem/ruby/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:98:in `read'
</span><span class='line'>  from /home/use1/.gem/ruby/1.9.1/gems/jekyll-0.11.2/lib/jekyll/site.rb:38:in `process'
</span><span class='line'>  from /home/use1/.gem/ruby/1.9.1/gems/jekyll-0.11.2/bin/jekyll:250:in `&lt;top (required)>'
</span><span class='line'>  from /home/use1/bin/jekyll:23:in `load'
</span><span class='line'>  from /home/use1/bin/jekyll:23:in `&lt;main>'</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>造成以上错误的原因很多,多数是修改博客文章属性(如果不是修改博客框架代码的话)失误造成的,下面就是的错误的范例:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "my title
</span><span class='line'>date: 2012-09-15 19:21
</span><span class='line'>comments: true
</span><span class='line'>categories:[tag1],[tag2]
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<ol>
<li>title 一栏的值应为 <code>"my title"</code> ,少了个引号</li>
<li>categories 一栏的写法应该为 <code>[tag1,tag2]</code> .</li>
<li>categories一栏的冒号后面应该空一格,像这样: <code>categories: [tag1,tag2]</code></li>
</ol>


<p>是需要眼睛足够&#8221;雪亮&#8221;啊.</p>

<h3>参考</h3>

<ol>
<li><a href="http://blog.micronarrativ.org/blog/2012/09/07/wordpress-til-octopress">blog.micronarrativ.org</a></li>
<li><a href="http://www.cnblogs.com/heart-runner/archive/2012/02/14/2351136.html">cnblogs.com</a></li>
</ol>


<h1>关于Codeblock代码高亮</h1>

<p>现象:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/home/use1/.gem/ruby/1.9.1/gems/ffi-1.0.11/lib/ffi/library.rb:121:in `block in ffi_lib': Could not open library 'lib.so': lib.so: cannot open shared object file: No such file or directory (LoadError)
</span><span class='line'>........</span></code></pre></td></tr></table></div></figure>


<p>看说明貌似是某个库没有.因为这种代码高亮是在本地将语法通过一些程序直接生成再上传到网上的,而高亮程序需要这个库.在fedora上直接<code>yum install python-devel</code>安装这个软件包即可解决.</p>

<h3>参考:</h3>

<ol>
<li><a href="https://github.com/tmm1/pygments.rb/issues/10">github.com/tmm1/pygments.rb/issues</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简单的 modbus/tcp 实现]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/09/15/a-simple-modbus-tcp-instance/"/>
    <updated>2012-09-15T00:15:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/09/15/a-simple-modbus-tcp-instance</id>
    <content type="html"><![CDATA[<h1>测试工具: modpoll(主站) diagslave(从站)</h1>

<h2>简介</h2>

<p>支持平台:</p>

<ol>
<li>Windows</li>
<li>Linux (x86 32-bit) &lt;-本文实验平台</li>
<li>Solaris (SPARC)</li>
<li>QNX Neutrino 6 (x86)</li>
</ol>


<p>本文使用这两个软件进行Linux 32位平台下的Modbus/TCP程序调试.</p>

<h3>1. 模拟主站(Linux):</h3>

<pre><code>./modpoll -m tcp -a 2 -t4:hex -r 10 -c 3  127.0.0.1 -1 -p 10001
</code></pre>

<p>各个选项意义如下:</p>

<ol>
<li>-m &lt;模式名>    : -m tcp即MODBUS/TCP protocol模式</li>
<li>-a &lt;从站编号>  : Slave address (1-255, 默认 1 )</li>
<li>-t 4:hex      : 16-bit output (holding) register data type with hex display;另有其他多种参见<strong>参考</strong></li>
<li>-r #          : Start reference (1-65536, 100 is default)</li>
<li>-c #          : Number of values to poll (1-100, 1 is default)</li>
<li>127.0.0.1     : IP地址(tcp模式)</li>
<li>-1            : (数字1)发送一次,没有这个选项则连续发送</li>
<li>-p &lt;端口号>    : tcp模式下指定端口号,默认 502</li>
</ol>


<h3>2. 模拟从站(Linux):</h3>

<pre><code>./diagslave -m tcp -p 10001
</code></pre>

<p>选项意义:</p>

<ol>
<li>-m tcp :tcp模式</li>
<li>-p 10001 : 监听端口</li>
</ol>


<!-- more -->


<h2>例子</h2>

<p>打开连个终端分别运行:</p>

<pre><code>#从站
./diagslave -m tcp -p 10001
</code></pre>

<p>和</p>

<pre><code>#主站
./modpoll -m tcp -a 2 -t4:hex -r 10 -c 3  127.0.0.1 -1 -p 10001
</code></pre>

<p>则,在从站可以看到如下显示:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>diagslave 2.12 - FieldTalk(tm) Modbus(R) Diagnostic Slave Simulator
</span><span class='line'>Copyright (c) 2002-2012 proconX Pty Ltd
</span><span class='line'>Visit http://www.modbusdriver.com for Modbus libraries and tools.
</span><span class='line'>
</span><span class='line'>Protocol configuration: MODBUS/TCP
</span><span class='line'>Slave configuration: address = -1, master activity t/o = 3.00
</span><span class='line'>TCP configuration: port = 10001, connection t/o = 60.00
</span><span class='line'>
</span><span class='line'>Server started up successfully.
</span><span class='line'>Listening to network (Ctrl-C to stop)
</span><span class='line'>
</span><span class='line'>validateMasterIpAddr: accepting connection from 127.0.0.1 ->显示从127.0.0.1链接到从站
</span><span class='line'>Slave   2: readHoldingRegisters from 10, 3 references  ->显示读取功能 和 从10读取3个寄存器
</span><span class='line'>...................</span></code></pre></td></tr></table></div></figure>


<p>同时主站如下显示:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>modpoll 3.1 - FieldTalk(tm) Modbus(R) Master Simulator
</span><span class='line'>Copyright (c) 2002-2011 proconX Pty Ltd
</span><span class='line'>Visit http://www.modbusdriver.com for Modbus libraries and tools.
</span><span class='line'>
</span><span class='line'>Protocol configuration: MODBUS/TCP ->模式
</span><span class='line'>Slave configuration...: address = 2, start reference = 10, count = 3 ->从站地址,起始寄存器,寄存器数量
</span><span class='line'>Communication.........: 127.0.0.1, port 10001, t/o 1.00 s, poll rate 1000 ms ->ip 端口
</span><span class='line'>Data type.............: 16-bit register (hex), output (holding) register table ->数据类型
</span><span class='line'>
</span><span class='line'>-- Polling slave... 
</span><span class='line'>[10]: 0x0000 ->数据 (仅仅能用用来测试通路,没有实际意义)
</span><span class='line'>[11]: 0x0000
</span><span class='line'>[12]: 0x0000</span></code></pre></td></tr></table></div></figure>


<h2>参考:</h2>

<ol>
<li>模拟主站(master)软件以及官方说明(modpoll)<a href="http://www.modbusdriver.com/modpoll.html">http://www.modbusdriver.com/modpoll.html</a></li>
<li>模拟从站软件以及官方说明:(diagslave)<a href="http://www.modbusdriver.com/diagslave.html">http://www.modbusdriver.com/diagslave.html</a></li>
</ol>


<h1>libmodbus 开源modbus库</h1>

<h2>简介</h2>

<p>使用c语言编写的modbus库</p>

<ol>
<li>官网:<a href="http://libmodbus.org/">http://libmodbus.org/</a>(墙?)</li>
<li>代码托管:git <a href="https://github.com/stephane/libmodbus">https://github.com/stephane/libmodbus</a></li>
</ol>


<h1>参考资料:</h1>

<ol>
<li><a href="http://www.simplymodbus.ca/TCP.htm">http://www.simplymodbus.ca/TCP.htm</a></li>
<li>实现指导手册<a href="http://www.electroind.com/pdf/Modbus_messaging_on_TCPIP_implementation_guide_V11.pdf">Modbus_messaging_on_TCPIP_implementation_guide</a></li>
<li>协议<a href="http://www.modbus.org/docs/Modbus_Application_Protocol_V1_1b.pdf">Modbus_Application_Protocol_V1_1b.pdf</a>(官网,mbap)</li>
<li>实现指导手册<a href="http://www.modbus.org/docs/Modbus_Messaging_Implementation_Guide_V1_0b.pdf">Modbus_Messaging_Implementation_Guide_V1_0b.pdf</a>(官网,实现指导)</li>
<li>说明书<a href="http://www.modbus.org/specs.php">www.modbus.org/specs.php</a>(说明书)</li>
<li>从Modbus到透明就绪 华镕 编著 第8章 (中文)</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[crosstool在fedora17下的编译遇到的问题和解决方法]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/08/27/fedora-17-corsstool/"/>
    <updated>2012-08-27T11:15:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/08/27/fedora-17-corsstool</id>
    <content type="html"><![CDATA[<p>/<em>##crosstool在fedora 17下的编译一到的问题/解决</em>/</p>

<p>构建过程<a href="http://blog.chinaunix.net/space.php?uid=20543672&amp;do=blog&amp;id=94268">blog.chinaunix.net</a>,在这个过程中出现的问题,笔记如下:</p>

<h3>问题1:</h3>

<pre><code>gcc: error trying to exec ‘cc1obj’: execvp: No such file or directory
</code></pre>

<p>obj-c的库问题,参看
<a href="http://lok.me/a/1182.html">http://lok.me/a/1182.html</a></p>

<p>一句话解决方式</p>

<p><code>yum install gcc-objc gcc-objc++ libobjc</code></p>

<!-- more -->


<h3>问题2:</h3>

<pre><code>flat_bl.m:2:2: 错误：expected identifier or ‘(’ before ‘%’ token
</code></pre>

<p>解决来源:<a href="http://forums.fedoraforum.org/archive/index.php/t-267449.html">fedoraforum</a></p>

<p>Makefile 依赖*.m文件错误,删除.m文件,更改Makefile依赖关系</p>

<h3>问题3:</h3>

<pre><code>These critical programs are missing or too old: gcc
Check the INSTALL file for required versions.
</code></pre>

<p>解决方法:<a href="http://lidu678.blog.163.com/blog/static/898060062010498571444/">lidu678.blog.163.com</a></p>

<p>概括:<code>crosstool-0.43/patches/glibc-2.3.2/glibc-2.3.3-allow-gcc-4.0-configure.patch</code>
检查版本时gcc 4.7.0 过高, 在该文件中可以看出<code>4.[01]*</code>改为<code>|4.[017]*</code>使其通过检查</p>

<h3>问题4:</h3>

<pre><code>make[2]: 进入目录“/home/your name/test/crosstool-0.43/build/arm-9tdmi-linux-gnu/gcc-4.1.0-glibc-2.3.2/glibc-2.3.2/manual”
Makefile:250: *** 混和的隐含和普通规则。 停止。
</code></pre>

<p>原因:<br/>
fedora make程序特有有的对混和目标的规则(对老版本makefile文件的兼容性不好),如</p>

<pre><code>目标1 目标2:
(tab)命令
</code></pre>

<p>分解成为:</p>

<pre><code>目标1:
(tab)命令
目标2:
(tab)命令
</code></pre>

<p>即可.<br/>
参考 &#8220;fedora make 混和的隐含和普通规则&#8221;
<a href="http://blog.csdn.net/melong100/article/details/6238273">blog.csdn.net</a></p>
]]></content>
  </entry>
  
</feed>
