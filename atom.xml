<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[我的博客]]></title>
  <link href="http://zodiac1111.github.com/atom.xml" rel="self"/>
  <link href="http://zodiac1111.github.com/"/>
  <updated>2012-08-22T19:26:15+08:00</updated>
  <id>http://zodiac1111.github.com/</id>
  <author>
    <name><![CDATA[zodiac1111]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[vim查找替换]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/08/21/vim-search-replace/"/>
    <updated>2012-08-21T17:15:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/08/21/vim-search-replace</id>
    <content type="html"><![CDATA[<p><code>#vim查找替换</code>
参考资料:http://www.chinavim.org/vivim-%E6%9F%A5%E6%89%BE%E6%9B%BF%E6%8D%A2%E5%A4%A7%E5%85%A8.html</p>

<p> 可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符</p>

<p> :替换当前行第一个 vivian/ 为 sky/</p>

<p> <code>:n,$s/vivian/sky/</code> 替换第 n 行开始到最后一行中每一行的<strong>第一个</strong> vivian 为 sky</p>

<p> <code>:n,$s/vivian/sky/g</code> 替换第 n 行开始到最后一行中每一行<strong>所有</strong> vivian 为 sky
<code>
:[地址/范围]s/&lt;搜索字&gt;/&lt;替换字&gt;[/g]
</code></p>

<ol>
<li>地址/范围有:
<code>
无 :当前行
1,10 : 1~10行
1,$  1~最后一行/文件结束 ps : 1,$ 等价于 %
.,.+10 从当前行(".") 到偏置10行(".+10") "+"表示向下偏移 "-"表示向上偏移
</code></li>
<li>s=sed 风格的搜索</li>
<li>/ 分割符</li>
<li>g  表示继续匹配(没有 表示匹配一次)</li>
</ol>


<p>(n 为数字，若 n 为 .&lt;句号>，表示从当前行开始到最后一行)</p>

<h2>删除</h2>

<p>删除括号内的东西 不包含括号 di) =delet in )<br/>
光标在一个word内部删除这个整个单词 diw  del in word<br/>
删除并进入insert模式方便修改 ciw change in word</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[set]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/08/21/set/"/>
    <updated>2012-08-21T17:15:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/08/21/set</id>
    <content type="html"><![CDATA[<h1>查看和设定vi的选项</h1>

<p>:set
:set all
查看设定选项</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aircrack Ng]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/08/21/aircrack-ng/"/>
    <updated>2012-08-21T00:00:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/08/21/aircrack-ng</id>
    <content type="html"><![CDATA[<blockquote><blockquote><p>http://netsecurity.51cto.com/art/201105/264844_3.htm</p></blockquote></blockquote>

<p>当然，通过输入iwconfig查看也是可以滴。这个命令专用于查看无线网卡，不像ifconfig那样查看所有适配器。</p>

<p>iwconfig</p>

<p>在Linux下，我们使用Aircrack-ng套装里的airmon-ng工具来实现，具体命令如下：</p>

<h1>airmon-ng start wlan0</h1>

<p>步骤3：探测无线网络，抓取无线数据包。</p>

<p>在激活无线网卡后，我们就可以开启无线数据包抓包工具了，这里我们使用Aircrack-ng套装里的airmon-ng工具来实现，具体命令如下：</p>

<p>不过在正式抓包之前，一般都是先进行预来探测，来获取当前无线网络概况，包括AP的SSID、MAC地址、工作频道、无线客户端MAC及数量等。只需打开一个Shell，输入具体命令如下：</p>

<h1>airodump-ng mon0</h1>

<p>参数解释：</p>

<p>mon0为之前已经载入并激活监听模式的无线网卡。如下图8所示。</p>

<p>既然我们看到了本次测试要攻击的目标，就是那个SSID名为TP-LINK的无线路由器，接下来输入命令如下：</p>

<h1>airodump-ng &#8211;ivs –w longas -c 6 wlan0</h1>

<p>参数解释：</p>

<p>&#8211;ivs 这里的设置是通过设置过滤，不再将所有无线数据保存，而只是保存可用于破解的IVS数据报文，这样可以有效地缩减保存的数据包大小；</p>

<p>-c 这里我们设置目标AP的工作频道，通过刚才的观察，我们要进行攻击测试的无线路由器工作频道为6；</p>

<p>-w 后跟要保存的文件名，这里w就是“write写”的意思，所以输入自己希望保持的文件名，如下图10所示我这里就写为longas。那么，小黑们一定要注意的是：这里我们虽然设置保存的文件名是longas，但是生成的文件却不是longase.ivs，而是longas-01.ivs。</p>

<p>图10</p>

<p>注意：这是因为airodump-ng这款工具为了方便后面破解时候的调用，所以对保存文件按顺序编了号，于是就多了-01这样的序号，以此类推，在进行第二次攻击时，若使用同样文件名longas保存的话，就会生成名为longas-02.ivs的文件，一定要注意哦，别到时候找不到又要怪我没写清楚：）</p>

<p>啊，估计有的朋友们看到这里，又会问在破解的时候可不可以将这些捕获的数据包一起使用呢，当然可以，届时只要在载入文件时使用longas*.cap即可，这里的星号指代所有前缀一致的文件。</p>

<p>在回车后，就可以看到如下图11所示的界面，这表示着无线数据包抓取的开始。</p>

<p>图11
airodump-ng -c 6  -w &lt;文件名> &#8211;ivs mon0</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fedora 17 x86_64安装配置TFTP服务器]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/07/03/Fedora-17-x86_64-tftp/"/>
    <updated>2012-07-03T10:58:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/07/03/Fedora-17-x86_64-tftp</id>
    <content type="html"><![CDATA[<blockquote><p>http://www.oklinux.cn/html/network/ser/20090729/72351.html</p></blockquote>

<hr />

<p>f17下有些东西有所改变,网上一些教程略显陈旧.</p>

<h3>安装环境：Fedora</h3>

<p>1.安装xinetd<br/>
这是一个守护程序(?)</p>

<pre><code>yum install xinetd
</code></pre>

<p>2.安装tftp server(ftp服务器)</p>

<pre><code>yum install tftp tftp-server
</code></pre>

<p>3.更改tftp配置文件 <code>/etc/xinetd.d/tftp</code></p>

<!-- more -->


<p><code>vi /etc/xinetd.d/tftp</code>,打开tftp文件，设置tftp的跟目录，开启服务。（没有安装tftp-server之前，不存在tftp文件）</p>

<pre><code>service tftp
{
    socket_type = dgram
    protocol = udp
    wait = yes
    user = root
    server = /usr/sbin/in.tftpd
    #tftp服务器跟目录
    #-c 表示服务端可以创建(create)文件.
    #更多 man tftpd
    server_args = -c -s /home/gerry/tftpboot  
    #disable = yes 
    disable = no
    per_source = 11
    cps = 100 2
    flags = IPv4
}
</code></pre>

<p>在上述server_args设置tftp的工作目录<br/>
并且注释掉disable选项或者改成no使能tftp服务。</p>

<p>4.在<code>/home/gerry</code>下创建tftpboot目录，并且修改权限</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir tftpboot
</span><span class='line'>chmod 777 tftpboot/</span></code></pre></td></tr></table></div></figure>


<p>5.启动tftp服务器</p>

<pre><code>service xinetd restart
</code></pre>

<p>现在已经被重定向,提示:<code>Redirecting to /bin/systemctl  restart xinetd.service</code><br/>
没什么影响,推荐按照重定向的命令执行来开启tftp服务<code>/bin/systemctl  restart xinetd.service</code></p>

<p>ps:selinux 和防火墙都可能(一定)使服务生效但无法访问!
粗暴但有效的解决办法 关闭syslinux 和防火墙</p>

<h4>selinux</h4>

<p>*临时关闭SELinux。如果你仅仅只是想临时关闭，可以输入</p>

<pre><code>setenforce 0
</code></pre>

<p>禁用SELinux。在 /etc  下可以看到一个SELinux文件夹，进入后，里面有个config文件，在终端进入到文件夹，输入</p>

<pre><code>vi config
</code></pre>

<p>更改其中的SELINUX项的值就可以关闭和启用SELinux服务了。
修改成  SELINUX=disable     禁用SeLinux
修改成  SELINUX=enforcing 使用SeLinux</p>

<h4>精准的防火墙设置</h4>

<blockquote><p>http://himme007.blog.163.com/blog/static/3466802520095742420660/</p></blockquote>

<p>修改<code>/etc/sysconfig/iptables</code>文件，添加以下内容：</p>

<pre><code>-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT  
</code></pre>

<p>各项参数含义暂时不甚了解,详情搜索iptables.</p>

<h1>参考文献</h1>

<p>tftpd设定<a href="http://std.sssh.tp.edu.tw/lesson/linux/tftp.htm">TFTP Trivial File Transfer Protocol</a><br/>
防火墙设置 http://himme007.blog.163.com/blog/static/3466802520095742420660/</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hello world]]></title>
    <link href="http://zodiac1111.github.com/blog/2012/07/03/hello-world/"/>
    <updated>2012-07-03T09:01:00+08:00</updated>
    <id>http://zodiac1111.github.com/blog/2012/07/03/hello-world</id>
    <content type="html"><![CDATA[<p>这是一个沙盒,测试各种不成熟的东西.</p>

<!-- more -->


<p>测试程序:测试2</p>

<h1>代码测试</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>int main()
</span><span class='line'>{
</span><span class='line'>  int i;
</span><span class='line'>  return 0;
</span><span class='line'>}
</span><span class='line'>$ sudo make me a sandwich</span></code></pre></td></tr></table></div></figure>


<h1>图片测试</h1>

<p><img src="http://placekitten.com/890/280">
Bacon ipsum dolor sit amet exercitation ball tip consectetur tempor. Biltong exercitation aliqua, ribeye consequat veniam consectetur.
Aliquip nulla do tempor, ball tip dolore anim esse strip steak nisi nostrud. Tri-tip mollit deserunt ut duis, commodo brisket short loin est hamburger sunt consequat rump meatloaf. Exercitation enim aliqua tempor dolore. Non eu venison, officia boudin tri-tip enim beef ribs flank cupidatat in aute. Tail voluptate fugiat aute flank, venison sint.
Filler text courtesy of Bacon Ipsum, Images courtesy of Place Kitten.
Brisket quis velit bresaola. Pork loin pork chop beef duis. Short loin fugiat officia short ribs magna. Ullamco eu proident jerky, fugiat chuck nostrud ham rump meatloaf eiusmod adipisicing. Qui et reprehenderit, magna biltong consequat short ribs pancetta. Tail tenderloin sausage, hamburger corned beef drumstick ad. Eu labore enim velit.
<img class="left" src="http://placekitten.com/320/250" title="Place Kitten #2" ></p>

<p><img class="right" src="http://placekitten.com/300/500" width="150" height="250" title="Place Kitten #3" ></p>

<p><img class="right" src="http://placekitten.com/300/500" width="150" height="250" title="Place Kitten #4" alt="An image of a very cute kitten"></p>
]]></content>
  </entry>
  
</feed>
